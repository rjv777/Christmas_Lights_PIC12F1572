

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec 14 13:35:35 2021

Microchip MPLAB XC8 C Compiler v2.10 (Pro license) build 20190730164152 Og9f 
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	plic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.10
    46                           ; Generated 31/07/2019 GMT
    47                           ; 
    48                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC12F1572 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  008C                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  010C                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0118                     	;# 
   127  0119                     	;# 
   128  011D                     	;# 
   129  011D                     	;# 
   130  018C                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0194                     	;# 
   137  0195                     	;# 
   138  0196                     	;# 
   139  0197                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019D                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  020C                     	;# 
   149  028C                     	;# 
   150  030C                     	;# 
   151  038C                     	;# 
   152  0391                     	;# 
   153  0392                     	;# 
   154  0393                     	;# 
   155  0691                     	;# 
   156  0692                     	;# 
   157  0693                     	;# 
   158  0694                     	;# 
   159  0695                     	;# 
   160  0D8E                     	;# 
   161  0D8F                     	;# 
   162  0D90                     	;# 
   163  0D91                     	;# 
   164  0D91                     	;# 
   165  0D92                     	;# 
   166  0D93                     	;# 
   167  0D93                     	;# 
   168  0D94                     	;# 
   169  0D95                     	;# 
   170  0D95                     	;# 
   171  0D96                     	;# 
   172  0D97                     	;# 
   173  0D97                     	;# 
   174  0D98                     	;# 
   175  0D99                     	;# 
   176  0D99                     	;# 
   177  0D9A                     	;# 
   178  0D9B                     	;# 
   179  0D9C                     	;# 
   180  0D9C                     	;# 
   181  0D9D                     	;# 
   182  0D9D                     	;# 
   183  0D9E                     	;# 
   184  0D9F                     	;# 
   185  0DA0                     	;# 
   186  0DA1                     	;# 
   187  0DA1                     	;# 
   188  0DA2                     	;# 
   189  0DA3                     	;# 
   190  0DA3                     	;# 
   191  0DA4                     	;# 
   192  0DA5                     	;# 
   193  0DA5                     	;# 
   194  0DA6                     	;# 
   195  0DA7                     	;# 
   196  0DA7                     	;# 
   197  0DA8                     	;# 
   198  0DA9                     	;# 
   199  0DA9                     	;# 
   200  0DAA                     	;# 
   201  0DAB                     	;# 
   202  0DAC                     	;# 
   203  0DAC                     	;# 
   204  0DAD                     	;# 
   205  0DAD                     	;# 
   206  0DAE                     	;# 
   207  0DAF                     	;# 
   208  0DB0                     	;# 
   209  0DB1                     	;# 
   210  0DB1                     	;# 
   211  0DB2                     	;# 
   212  0DB3                     	;# 
   213  0DB3                     	;# 
   214  0DB4                     	;# 
   215  0DB5                     	;# 
   216  0DB5                     	;# 
   217  0DB6                     	;# 
   218  0DB7                     	;# 
   219  0DB7                     	;# 
   220  0DB8                     	;# 
   221  0DB9                     	;# 
   222  0DB9                     	;# 
   223  0DBA                     	;# 
   224  0DBB                     	;# 
   225  0DBC                     	;# 
   226  0DBC                     	;# 
   227  0DBD                     	;# 
   228  0DBD                     	;# 
   229  0DBE                     	;# 
   230  0DBF                     	;# 
   231  0DC0                     	;# 
   232  0FE4                     	;# 
   233  0FE5                     	;# 
   234  0FE6                     	;# 
   235  0FE7                     	;# 
   236  0FE8                     	;# 
   237  0FE8                     	;# 
   238  0FE9                     	;# 
   239  0FEA                     	;# 
   240  0FEA                     	;# 
   241  0FEB                     	;# 
   242  0FED                     	;# 
   243  0FEE                     	;# 
   244  0FEE                     	;# 
   245  0FEF                     	;# 
   246                           
   247                           	psect	idataBANK0
   248  0000                     __pidataBANK0:	
   249  000C                     _PORTAbits	set	12
   250  0016                     _TMR1L	set	22
   251  0017                     _TMR1H	set	23
   252  0015                     _TMR0	set	21
   253  008E                     _ADIF	set	142
   254  0058                     _IOCIF	set	88
   255  005B                     _IOCIE	set	91
   256  0088                     _TMR1IF	set	136
   257  00C0                     _TMR1ON	set	192
   258  00C5                     _T1CKPS1	set	197
   259  00C4                     _T1CKPS0	set	196
   260  00C7                     _TMR1CS1	set	199
   261  00C6                     _TMR1CS0	set	198
   262  005E                     _PEIE	set	94
   263  005F                     _GIE	set	95
   264  005A                     _T0IF	set	90
   265  005D                     _T0IE	set	93
   266  009B                     _ADRESL	set	155
   267  009C                     _ADRESH	set	156
   268  009E                     _ADCON1	set	158
   269  009D                     _ADCON0	set	157
   270  008C                     _TRISAbits	set	140
   271  0095                     _OPTION_REGbits	set	149
   272  0099                     _OSCCONbits	set	153
   273  04E9                     _GO	set	1257
   274  0488                     _TMR1IE	set	1160
   275  04AB                     _PSA	set	1195
   276  04AD                     _TMR0CS	set	1197
   277  018C                     _ANSELAbits	set	396
   278  020C                     _WPUA	set	524
   279  0393                     _IOCAFbits	set	915
   280  0391                     _IOCAPbits	set	913
   281  0392                     _IOCANbits	set	914
   282  0DB5                     _PWM3PR	set	3509
   283  0DB3                     _PWM3DC	set	3507
   284  0DB1                     _PWM3PH	set	3505
   285  0D95                     _PWM1PR	set	3477
   286  0D93                     _PWM1DC	set	3475
   287  0D91                     _PWM1PH	set	3473
   288  0DA5                     _PWM2PR	set	3493
   289  0DA3                     _PWM2DC	set	3491
   290  0DA1                     _PWM2PH	set	3489
   291  0DBE                     _PWM3CLKCONbits	set	3518
   292  0DC0                     _PWM3OFCONbits	set	3520
   293  0DBB                     _PWM3CONbits	set	3515
   294  0D9E                     _PWM1CLKCONbits	set	3486
   295  0DA0                     _PWM1OFCONbits	set	3488
   296  0D9B                     _PWM1CONbits	set	3483
   297  0DAE                     _PWM2CLKCONbits	set	3502
   298  0DB0                     _PWM2OFCONbits	set	3504
   299  0DAB                     _PWM2CONbits	set	3499
   300                           
   301                           ; #config settings
   302  0000                     
   303                           	psect	cinit
   304  008D                     start_initialization:	
   305  008D                     __initialization:	
   306                           
   307                           ;initializer for _btn_mode
   308  008D  3001               	movlw	1
   309  008E  00D3               	movwf	__pdataBANK0& (0+127)
   310  008F  3046               	movlw	low __pbssBANK0
   311                           
   312                           ; Clear objects allocated to BITCOMMON
   313  0090  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   314                           
   315                           ; Clear objects allocated to BANK0
   316  0091  0084               	movwf	4
   317  0092  3000               	movlw	high __pbssBANK0
   318  0093  0085               	movwf	5
   319  0094  300D               	movlw	13
   320  0095  259E               	fcall	clear_ram0
   321  0096                     end_of_initialization:	
   322                           ;End of C runtime variable initialization code
   323                           
   324  0096                     __end_of__initialization:	
   325  0096  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   326  0097  0020               	movlb	0
   327  0098  2899               	ljmp	l2405	;jump to C main() function
   328                           
   329                           	psect	bitbssCOMMON
   330  03E0                     __pbitbssCOMMON:	
   331  03E0                     _break_del:	
   332  03E0                     	ds	1
   333  03E1                     _btn_ok:	
   334  03E1                     	ds	1
   335                           
   336                           	psect	bssBANK0
   337  0046                     __pbssBANK0:	
   338  0046                     _time1:	
   339  0046                     	ds	2
   340  0048                     _millis_count:	
   341  0048                     	ds	2
   342  004A                     _result_old:	
   343  004A                     	ds	2
   344  004C                     _pause:	
   345  004C                     	ds	2
   346  004E                     _brightness:	
   347  004E                     	ds	2
   348  0050                     _result:	
   349  0050                     	ds	2
   350  0052                     _tim1_cnt:	
   351  0052                     	ds	1
   352                           
   353                           	psect	dataBANK0
   354  0053                     __pdataBANK0:	
   355  0053                     _btn_mode:	
   356  0053                     	ds	1
   357                           
   358                           	psect	clrtext
   359  059E                     clear_ram0:	
   360                           ;	Called with FSR0 containing the base address, and
   361                           ;	WREG with the size to clear
   362                           
   363  059E  0064               	clrwdt	;clear the watchdog before getting into this loop
   364  059F                     clrloop0:	
   365  059F  0180               	clrf	0	;clear RAM location pointed to by FSR
   366  05A0  3101               	addfsr 0,1
   367  05A1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   368  05A2  2D9F               	goto	clrloop0	;have we reached the end yet?
   369  05A3  3400               	retlw	0	;all done for this memory range, return
   370                           
   371                           	psect	cstackBANK1
   372  00A0                     __pcstackBANK1:	
   373  00A0                     ?_delay_ms:	
   374  00A0                     ??_osc_setup:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  00A0                     ??_tmr0_init:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  00A0                     ??_tmr1_init:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  00A0                     ??_pwm2_init:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  00A0                     ??_pwm1_init:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  00A0                     ??_pwm3_init:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  00A0                     ??_port_setup:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  00A0                     ??_adc_setup:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  00A0                     ?_millis:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  00A0                     ?___wmul:	
   402                           ; 2 bytes @ 0x0
   403                           
   404  00A0                     delay_ms@milliseconds:	
   405                           ; 2 bytes @ 0x0
   406                           
   407  00A0                     ___wmul@multiplier:	
   408                           ; 2 bytes @ 0x0
   409                           
   410                           
   411                           ; 2 bytes @ 0x0
   412  00A0                     	ds	2
   413  00A2                     ??_delay_ms:	
   414  00A2                     ??_millis:	
   415                           ; 1 bytes @ 0x2
   416                           
   417  00A2                     ___wmul@multiplicand:	
   418                           ; 1 bytes @ 0x2
   419                           
   420                           
   421                           ; 2 bytes @ 0x2
   422  00A2                     	ds	2
   423  00A4                     ??___wmul:	
   424  00A4                     ___wmul@product:	
   425                           ; 1 bytes @ 0x4
   426                           
   427                           
   428                           ; 2 bytes @ 0x4
   429  00A4                     	ds	2
   430  00A6                     ?_RED_LED:	
   431  00A6                     ?_GREEN_LED:	
   432                           ; 1 bytes @ 0x6
   433                           
   434  00A6                     ?_BLUE_LED:	
   435                           ; 1 bytes @ 0x6
   436                           
   437  00A6                     RED_LED@duty:	
   438                           ; 1 bytes @ 0x6
   439                           
   440  00A6                     GREEN_LED@duty:	
   441                           ; 2 bytes @ 0x6
   442                           
   443  00A6                     BLUE_LED@duty:	
   444                           ; 2 bytes @ 0x6
   445                           
   446                           
   447                           ; 2 bytes @ 0x6
   448  00A6                     	ds	2
   449  00A8                     ??_RED_LED:	
   450  00A8                     ??_GREEN_LED:	
   451                           ; 1 bytes @ 0x8
   452                           
   453  00A8                     ??_BLUE_LED:	
   454                           ; 1 bytes @ 0x8
   455                           
   456                           
   457                           ; 1 bytes @ 0x8
   458  00A8                     	ds	1
   459  00A9                     ?_miganie:	
   460  00A9                     ?_begogon1:	
   461                           ; 1 bytes @ 0x9
   462                           
   463  00A9                     ?_begogon2:	
   464                           ; 1 bytes @ 0x9
   465                           
   466  00A9                     ?_begogon3:	
   467                           ; 1 bytes @ 0x9
   468                           
   469  00A9                     ?_begogonGB:	
   470                           ; 1 bytes @ 0x9
   471                           
   472  00A9                     ?_begogonBR:	
   473                           ; 1 bytes @ 0x9
   474                           
   475  00A9                     ?_begogonGR:	
   476                           ; 1 bytes @ 0x9
   477                           
   478  00A9                     ??_RGB_ON:	
   479                           ; 1 bytes @ 0x9
   480                           
   481  00A9                     RGB_ON@yarc:	
   482                           ; 1 bytes @ 0x9
   483                           
   484  00A9                     miganie@del:	
   485                           ; 1 bytes @ 0x9
   486                           
   487  00A9                     begogon1@del:	
   488                           ; 2 bytes @ 0x9
   489                           
   490  00A9                     begogon2@del:	
   491                           ; 2 bytes @ 0x9
   492                           
   493  00A9                     begogon3@del:	
   494                           ; 2 bytes @ 0x9
   495                           
   496  00A9                     begogonGB@del:	
   497                           ; 2 bytes @ 0x9
   498                           
   499  00A9                     begogonBR@del:	
   500                           ; 2 bytes @ 0x9
   501                           
   502  00A9                     begogonGR@del:	
   503                           ; 2 bytes @ 0x9
   504                           
   505                           
   506                           ; 2 bytes @ 0x9
   507  00A9                     	ds	2
   508  00AB                     ??_miganie:	
   509  00AB                     ??_begogon1:	
   510                           ; 1 bytes @ 0xB
   511                           
   512  00AB                     ??_begogon2:	
   513                           ; 1 bytes @ 0xB
   514                           
   515  00AB                     ??_begogon3:	
   516                           ; 1 bytes @ 0xB
   517                           
   518  00AB                     ??_begogonGB:	
   519                           ; 1 bytes @ 0xB
   520                           
   521  00AB                     ??_begogonBR:	
   522                           ; 1 bytes @ 0xB
   523                           
   524  00AB                     ??_begogonGR:	
   525                           ; 1 bytes @ 0xB
   526                           
   527  00AB                     begogon3@count_down:	
   528                           ; 1 bytes @ 0xB
   529                           
   530  00AB                     begogon2@count1:	
   531                           ; 1 bytes @ 0xB
   532                           
   533                           
   534                           ; 2 bytes @ 0xB
   535  00AB                     	ds	1
   536  00AC                     begogon3@count_up:	
   537                           
   538                           ; 1 bytes @ 0xC
   539  00AC                     	ds	1
   540  00AD                     ??_main:	
   541                           
   542                           ; 1 bytes @ 0xD
   543  00AD                     	ds	2
   544                           
   545                           	psect	cstackCOMMON
   546  0070                     __pcstackCOMMON:	
   547  0070                     ?_osc_setup:	
   548  0070                     ?_tmr0_init:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_tmr1_init:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_pwm2_init:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_pwm1_init:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_pwm3_init:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_port_setup:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_adc_setup:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_RGB_ON:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_main:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_ISR:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_adr_read:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?___lwdiv:	
   582                           ; 2 bytes @ 0x0
   583                           
   584  0070                     ?___lmul:	
   585                           ; 2 bytes @ 0x0
   586                           
   587  0070                     ___lwdiv@divisor:	
   588                           ; 4 bytes @ 0x0
   589                           
   590  0070                     ___lmul@multiplier:	
   591                           ; 2 bytes @ 0x0
   592                           
   593                           
   594                           ; 4 bytes @ 0x0
   595  0070                     	ds	2
   596  0072                     ??_adr_read:	
   597  0072                     ___lwdiv@dividend:	
   598                           ; 1 bytes @ 0x2
   599                           
   600                           
   601                           ; 2 bytes @ 0x2
   602  0072                     	ds	2
   603  0074                     ??___lwdiv:	
   604  0074                     adr_read@adc_result:	
   605                           ; 1 bytes @ 0x4
   606                           
   607  0074                     ___lwdiv@quotient:	
   608                           ; 2 bytes @ 0x4
   609                           
   610  0074                     ___lmul@multiplicand:	
   611                           ; 2 bytes @ 0x4
   612                           
   613                           
   614                           ; 4 bytes @ 0x4
   615  0074                     	ds	2
   616  0076                     ___lwdiv@counter:	
   617                           
   618                           ; 1 bytes @ 0x6
   619  0076                     	ds	2
   620  0078                     ??___lmul:	
   621  0078                     ___lmul@product:	
   622                           ; 1 bytes @ 0x8
   623                           
   624                           
   625                           ; 4 bytes @ 0x8
   626  0078                     	ds	4
   627  007C                     ??_ISR:	
   628  007C                     ??___aldiv:	
   629                           ; 1 bytes @ 0xC
   630                           
   631                           
   632                           	psect	cstackBANK0
   633  0020                     __pcstackBANK0:	
   634                           ; 1 bytes @ 0xC
   635                           
   636  0020                     ?___aldiv:	
   637  0020                     ___aldiv@divisor:	
   638                           ; 4 bytes @ 0x0
   639                           
   640                           
   641                           ; 4 bytes @ 0x0
   642  0020                     	ds	4
   643  0024                     ___aldiv@dividend:	
   644                           
   645                           ; 4 bytes @ 0x4
   646  0024                     	ds	4
   647  0028                     ___aldiv@counter:	
   648                           
   649                           ; 1 bytes @ 0x8
   650  0028                     	ds	1
   651  0029                     ___aldiv@sign:	
   652                           
   653                           ; 1 bytes @ 0x9
   654  0029                     	ds	1
   655  002A                     ___aldiv@quotient:	
   656                           
   657                           ; 4 bytes @ 0xA
   658  002A                     	ds	4
   659  002E                     ?_map:	
   660  002E                     map@x:	
   661                           ; 4 bytes @ 0xE
   662                           
   663                           
   664                           ; 4 bytes @ 0xE
   665  002E                     	ds	4
   666  0032                     map@in_min:	
   667                           
   668                           ; 4 bytes @ 0x12
   669  0032                     	ds	4
   670  0036                     map@in_max:	
   671                           
   672                           ; 4 bytes @ 0x16
   673  0036                     	ds	4
   674  003A                     map@out_min:	
   675                           
   676                           ; 4 bytes @ 0x1A
   677  003A                     	ds	4
   678  003E                     map@out_max:	
   679                           
   680                           ; 4 bytes @ 0x1E
   681  003E                     	ds	4
   682  0042                     ??_map:	
   683                           
   684                           ; 1 bytes @ 0x22
   685  0042                     	ds	4
   686                           
   687                           	psect	maintext
   688  0099                     __pmaintext:	
   689 ;;
   690 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   691 ;;
   692 ;; *************** function _main *****************
   693 ;; Defined at:
   694 ;;		line 390 in file "main.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : B1F/0
   705 ;;		On exit  : 1F/1
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   708 ;;      Params:         0       0       0       0
   709 ;;      Locals:         0       0       0       0
   710 ;;      Temps:          0       0       2       0
   711 ;;      Totals:         0       0       2       0
   712 ;;Total ram usage:        2 bytes
   713 ;; Hardware stack levels required when called:    6
   714 ;; This function calls:
   715 ;;		_BLUE_LED
   716 ;;		_GREEN_LED
   717 ;;		_RED_LED
   718 ;;		_RGB_ON
   719 ;;		_adc_setup
   720 ;;		_begogon1
   721 ;;		_begogon2
   722 ;;		_begogon3
   723 ;;		_begogonBR
   724 ;;		_begogonGB
   725 ;;		_begogonGR
   726 ;;		_miganie
   727 ;;		_millis
   728 ;;		_osc_setup
   729 ;;		_port_setup
   730 ;;		_pwm1_init
   731 ;;		_pwm2_init
   732 ;;		_pwm3_init
   733 ;;		_tmr0_init
   734 ;;		_tmr1_init
   735 ;; This function is called by:
   736 ;;		Startup code after reset
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _main
   742  0099                     _main:	
   743  0099                     l2405:	
   744                           ;incstack = 0
   745                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   746                           
   747                           
   748                           ;main.c: 391:     osc_setup();
   749  0099  258C               	fcall	_osc_setup
   750                           
   751                           ;main.c: 392:     tmr0_init();
   752  009A  257F               	fcall	_tmr0_init
   753                           
   754                           ;main.c: 393:     port_setup();
   755  009B  24EA               	fcall	_port_setup
   756                           
   757                           ;main.c: 394:     pwm1_init();
   758  009C  24D4               	fcall	_pwm1_init
   759                           
   760                           ;main.c: 395:     pwm2_init();
   761  009D  2515               	fcall	_pwm2_init
   762                           
   763                           ;main.c: 396:     pwm3_init();
   764  009E  2500               	fcall	_pwm3_init
   765                           
   766                           ;main.c: 397:     adc_setup();
   767  009F  25A4               	fcall	_adc_setup
   768                           
   769                           ;main.c: 398:     tmr1_init();
   770  00A0  2571               	fcall	_tmr1_init
   771  00A1  2965               	goto	l2419
   772  00A2                     l2421:	
   773  00A2  1CFC               	btfss	_btn_ok/(0+8),_btn_ok& (0+7)
   774  00A3  2977               	goto	l2465
   775                           
   776                           ;main.c: 402:             if (btn_ok == 1 & PORTAbits.RA5 == 1) {
   777  00A4  0020               	movlb	0	; select bank0
   778  00A5  1A8C               	btfsc	12,5	;volatile
   779  00A6  1CFC               	btfss	_btn_ok/(0+8),_btn_ok& (0+7)
   780  00A7  28B8               	goto	l226
   781                           
   782                           ;main.c: 403:                 GREEN_LED(0);
   783  00A8  0021               	movlb	1	; select bank1
   784  00A9  01A6               	clrf	GREEN_LED@duty^(0+128)
   785  00AA  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
   786  00AB  2482               	fcall	_GREEN_LED
   787                           
   788                           ;main.c: 404:                 RED_LED(0);
   789  00AC  0021               	movlb	1	; select bank1
   790  00AD  01A6               	clrf	RED_LED@duty^(0+128)
   791  00AE  01A7               	clrf	(RED_LED@duty+1)^(0+128)
   792  00AF  2465               	fcall	_RED_LED
   793                           
   794                           ;main.c: 405:                 BLUE_LED(0);
   795  00B0  0021               	movlb	1	; select bank1
   796  00B1  01A6               	clrf	BLUE_LED@duty^(0+128)
   797  00B2  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
   798  00B3  249F               	fcall	_BLUE_LED
   799                           
   800                           ;main.c: 406:                 btn_ok = 0;
   801  00B4  10FC               	bcf	_btn_ok/(0+8),_btn_ok& (0+7)
   802                           
   803                           ;main.c: 407:                 break_del = 0;
   804  00B5  107C               	bcf	_break_del/(0+8),_break_del& (0+7)
   805                           
   806                           ;main.c: 408:                 btn_mode++;
   807  00B6  0020               	movlb	0	; select bank0
   808  00B7  0AD3               	incf	_btn_mode,f
   809  00B8                     l226:	
   810                           ;main.c: 409:             }
   811                           
   812                           
   813                           ;main.c: 410:             time1 = millis();
   814  00B8  2595               	fcall	_millis
   815  00B9  0821               	movf	(?_millis+1)^(0+128),w
   816  00BA  0020               	movlb	0	; select bank0
   817  00BB  00C7               	movwf	_time1+1
   818  00BC  0021               	movlb	1	; select bank1
   819  00BD  0820               	movf	?_millis^(0+128),w
   820  00BE  0020               	movlb	0	; select bank0
   821  00BF  00C6               	movwf	_time1
   822  00C0  2977               	goto	l2465
   823  00C1                     l2435:	
   824  00C1  0020               	movlb	0	; select bank0
   825  00C2  084E               	movf	_brightness,w
   826  00C3  2562               	fcall	_RGB_ON
   827                           
   828                           ;main.c: 416:                 break;
   829  00C4  2965               	goto	l2419
   830  00C5                     l2437:	
   831  00C5  0020               	movlb	0	; select bank0
   832  00C6  084F               	movf	_brightness+1,w
   833  00C7  0021               	movlb	1	; select bank1
   834  00C8  00A7               	movwf	(BLUE_LED@duty+1)^(0+128)
   835  00C9  0020               	movlb	0	; select bank0
   836  00CA  084E               	movf	_brightness,w
   837  00CB  0021               	movlb	1	; select bank1
   838  00CC  00A6               	movwf	BLUE_LED@duty^(0+128)
   839  00CD  249F               	fcall	_BLUE_LED
   840                           
   841                           ;main.c: 418:                 break;
   842  00CE  2965               	goto	l2419
   843  00CF                     l2439:	
   844  00CF  0020               	movlb	0	; select bank0
   845  00D0  084F               	movf	_brightness+1,w
   846  00D1  0021               	movlb	1	; select bank1
   847  00D2  00A7               	movwf	(RED_LED@duty+1)^(0+128)
   848  00D3  0020               	movlb	0	; select bank0
   849  00D4  084E               	movf	_brightness,w
   850  00D5  0021               	movlb	1	; select bank1
   851  00D6  00A6               	movwf	RED_LED@duty^(0+128)
   852  00D7  2465               	fcall	_RED_LED
   853                           
   854                           ;main.c: 420:                 break;
   855  00D8  2965               	goto	l2419
   856  00D9                     l2441:	
   857  00D9  0020               	movlb	0	; select bank0
   858  00DA  084F               	movf	_brightness+1,w
   859  00DB  0021               	movlb	1	; select bank1
   860  00DC  00A7               	movwf	(GREEN_LED@duty+1)^(0+128)
   861  00DD  0020               	movlb	0	; select bank0
   862  00DE  084E               	movf	_brightness,w
   863  00DF  0021               	movlb	1	; select bank1
   864  00E0  00A6               	movwf	GREEN_LED@duty^(0+128)
   865  00E1  2482               	fcall	_GREEN_LED
   866                           
   867                           ;main.c: 422:                 break;
   868  00E2  2965               	goto	l2419
   869  00E3                     l2443:	
   870  00E3  0020               	movlb	0	; select bank0
   871  00E4  084F               	movf	_brightness+1,w
   872  00E5  0021               	movlb	1	; select bank1
   873  00E6  00A7               	movwf	(BLUE_LED@duty+1)^(0+128)
   874  00E7  0020               	movlb	0	; select bank0
   875  00E8  084E               	movf	_brightness,w
   876  00E9  0021               	movlb	1	; select bank1
   877  00EA  00A6               	movwf	BLUE_LED@duty^(0+128)
   878  00EB  249F               	fcall	_BLUE_LED
   879                           
   880                           ;main.c: 424:                 GREEN_LED(brightness);
   881  00EC  0020               	movlb	0	; select bank0
   882  00ED  084F               	movf	_brightness+1,w
   883  00EE  0021               	movlb	1	; select bank1
   884  00EF  00A7               	movwf	(GREEN_LED@duty+1)^(0+128)
   885  00F0  0020               	movlb	0	; select bank0
   886  00F1  084E               	movf	_brightness,w
   887  00F2  0021               	movlb	1	; select bank1
   888  00F3  00A6               	movwf	GREEN_LED@duty^(0+128)
   889  00F4  2482               	fcall	_GREEN_LED
   890                           
   891                           ;main.c: 425:                 break;
   892  00F5  2965               	goto	l2419
   893  00F6                     l2445:	
   894  00F6  0020               	movlb	0	; select bank0
   895  00F7  084F               	movf	_brightness+1,w
   896  00F8  0021               	movlb	1	; select bank1
   897  00F9  00A7               	movwf	(BLUE_LED@duty+1)^(0+128)
   898  00FA  0020               	movlb	0	; select bank0
   899  00FB  084E               	movf	_brightness,w
   900  00FC  0021               	movlb	1	; select bank1
   901  00FD  00A6               	movwf	BLUE_LED@duty^(0+128)
   902  00FE  249F               	fcall	_BLUE_LED
   903                           
   904                           ;main.c: 427:                 RED_LED(brightness);
   905  00FF  0020               	movlb	0	; select bank0
   906  0100  084F               	movf	_brightness+1,w
   907  0101  0021               	movlb	1	; select bank1
   908  0102  00A7               	movwf	(RED_LED@duty+1)^(0+128)
   909  0103  0020               	movlb	0	; select bank0
   910  0104  084E               	movf	_brightness,w
   911  0105  0021               	movlb	1	; select bank1
   912  0106  00A6               	movwf	RED_LED@duty^(0+128)
   913  0107  2465               	fcall	_RED_LED
   914                           
   915                           ;main.c: 428:                 break;
   916  0108  2965               	goto	l2419
   917  0109                     l2447:	
   918  0109  0020               	movlb	0	; select bank0
   919  010A  084F               	movf	_brightness+1,w
   920  010B  0021               	movlb	1	; select bank1
   921  010C  00A7               	movwf	(RED_LED@duty+1)^(0+128)
   922  010D  0020               	movlb	0	; select bank0
   923  010E  084E               	movf	_brightness,w
   924  010F  0021               	movlb	1	; select bank1
   925  0110  00A6               	movwf	RED_LED@duty^(0+128)
   926  0111  2465               	fcall	_RED_LED
   927                           
   928                           ;main.c: 430:                 GREEN_LED(brightness);
   929  0112  0020               	movlb	0	; select bank0
   930  0113  084F               	movf	_brightness+1,w
   931  0114  0021               	movlb	1	; select bank1
   932  0115  00A7               	movwf	(GREEN_LED@duty+1)^(0+128)
   933  0116  0020               	movlb	0	; select bank0
   934  0117  084E               	movf	_brightness,w
   935  0118  0021               	movlb	1	; select bank1
   936  0119  00A6               	movwf	GREEN_LED@duty^(0+128)
   937  011A  2482               	fcall	_GREEN_LED
   938                           
   939                           ;main.c: 431:                 break;
   940  011B  2965               	goto	l2419
   941  011C                     l2449:	
   942  011C  0020               	movlb	0	; select bank0
   943  011D  084D               	movf	_pause+1,w
   944  011E  0021               	movlb	1	; select bank1
   945  011F  00AA               	movwf	(miganie@del+1)^(0+128)
   946  0120  0020               	movlb	0	; select bank0
   947  0121  084C               	movf	_pause,w
   948  0122  0021               	movlb	1	; select bank1
   949  0123  00A9               	movwf	miganie@del^(0+128)
   950  0124  23F6               	fcall	_miganie
   951                           
   952                           ;main.c: 433:                 break;
   953  0125  2965               	goto	l2419
   954  0126                     l2451:	
   955  0126  0020               	movlb	0	; select bank0
   956  0127  084D               	movf	_pause+1,w
   957  0128  0021               	movlb	1	; select bank1
   958  0129  00AA               	movwf	(begogon1@del+1)^(0+128)
   959  012A  0020               	movlb	0	; select bank0
   960  012B  084C               	movf	_pause,w
   961  012C  0021               	movlb	1	; select bank1
   962  012D  00A9               	movwf	begogon1@del^(0+128)
   963  012E  234E               	fcall	_begogon1
   964                           
   965                           ;main.c: 435:                 break;
   966  012F  2965               	goto	l2419
   967  0130                     l2453:	
   968  0130  0020               	movlb	0	; select bank0
   969  0131  084D               	movf	_pause+1,w
   970  0132  0021               	movlb	1	; select bank1
   971  0133  00AA               	movwf	(begogon2@del+1)^(0+128)
   972  0134  0020               	movlb	0	; select bank0
   973  0135  084C               	movf	_pause,w
   974  0136  0021               	movlb	1	; select bank1
   975  0137  00A9               	movwf	begogon2@del^(0+128)
   976  0138  218F               	fcall	_begogon2
   977                           
   978                           ;main.c: 437:                 break;
   979  0139  2965               	goto	l2419
   980  013A                     l2455:	
   981  013A  0020               	movlb	0	; select bank0
   982  013B  084D               	movf	_pause+1,w
   983  013C  0021               	movlb	1	; select bank1
   984  013D  00AA               	movwf	(begogon3@del+1)^(0+128)
   985  013E  0020               	movlb	0	; select bank0
   986  013F  084C               	movf	_pause,w
   987  0140  0021               	movlb	1	; select bank1
   988  0141  00A9               	movwf	begogon3@del^(0+128)
   989  0142  229B               	fcall	_begogon3
   990                           
   991                           ;main.c: 439:                 break;
   992  0143  2965               	goto	l2419
   993  0144                     l2457:	
   994  0144  0020               	movlb	0	; select bank0
   995  0145  084D               	movf	_pause+1,w
   996  0146  0021               	movlb	1	; select bank1
   997  0147  00AA               	movwf	(begogonGB@del+1)^(0+128)
   998  0148  0020               	movlb	0	; select bank0
   999  0149  084C               	movf	_pause,w
  1000  014A  0021               	movlb	1	; select bank1
  1001  014B  00A9               	movwf	begogonGB@del^(0+128)
  1002  014C  23AA               	fcall	_begogonGB
  1003                           
  1004                           ;main.c: 441:                 break;
  1005  014D  2965               	goto	l2419
  1006  014E                     l2459:	
  1007  014E  0020               	movlb	0	; select bank0
  1008  014F  084D               	movf	_pause+1,w
  1009  0150  0021               	movlb	1	; select bank1
  1010  0151  00AA               	movwf	(begogonBR@del+1)^(0+128)
  1011  0152  0020               	movlb	0	; select bank0
  1012  0153  084C               	movf	_pause,w
  1013  0154  0021               	movlb	1	; select bank1
  1014  0155  00A9               	movwf	begogonBR@del^(0+128)
  1015  0156  23D0               	fcall	_begogonBR
  1016                           
  1017                           ;main.c: 443:                 break;
  1018  0157  2965               	goto	l2419
  1019  0158                     l2461:	
  1020  0158  0020               	movlb	0	; select bank0
  1021  0159  084D               	movf	_pause+1,w
  1022  015A  0021               	movlb	1	; select bank1
  1023  015B  00AA               	movwf	(begogonGR@del+1)^(0+128)
  1024  015C  0020               	movlb	0	; select bank0
  1025  015D  084C               	movf	_pause,w
  1026  015E  0021               	movlb	1	; select bank1
  1027  015F  00A9               	movwf	begogonGR@del^(0+128)
  1028  0160  2384               	fcall	_begogonGR
  1029                           
  1030                           ;main.c: 445:                 break;
  1031  0161  2965               	goto	l2419
  1032  0162                     l243:	
  1033                           ;main.c: 446:             case 15: btn_mode = 1;
  1034                           
  1035  0162  0020               	movlb	0	; select bank0
  1036  0163  01D3               	clrf	_btn_mode
  1037  0164  0AD3               	incf	_btn_mode,f
  1038  0165                     l2419:	
  1039                           ;main.c: 447:                 break;
  1040                           
  1041                           
  1042                           ;main.c: 401:         if (btn_ok == 1 & (millis() - time1) > 50) {
  1043  0165  2595               	fcall	_millis
  1044  0166  0020               	movlb	0	; select bank0
  1045  0167  0846               	movf	_time1,w
  1046  0168  0021               	movlb	1	; select bank1
  1047  0169  0220               	subwf	?_millis^(0+128),w
  1048  016A  00AD               	movwf	??_main^(0+128)
  1049  016B  0020               	movlb	0	; select bank0
  1050  016C  0847               	movf	_time1+1,w
  1051  016D  0021               	movlb	1	; select bank1
  1052  016E  3B21               	subwfb	(?_millis+1)^(0+128),w
  1053  016F  00AE               	movwf	(??_main+1)^(0+128)
  1054  0170  3000               	movlw	0
  1055  0171  022E               	subwf	(??_main+1)^(0+128),w
  1056  0172  3033               	movlw	51
  1057  0173  1903               	skipnz
  1058  0174  022D               	subwf	??_main^(0+128),w
  1059  0175  1803               	btfsc	3,0
  1060  0176  28A2               	goto	l2421
  1061  0177                     l2465:	
  1062  0177  0020               	movlb	0	; select bank0
  1063  0178  0853               	movf	_btn_mode,w
  1064  0179  0021               	movlb	1	; select bank1
  1065  017A  00AD               	movwf	??_main^(0+128)
  1066  017B  01AE               	clrf	(??_main^(0+128)+1)
  1067                           
  1068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1069                           ; Switch size 1, requested type "speed"
  1070                           ; Number of cases is 1, Range of values is 0 to 0
  1071                           ; switch strategies available:
  1072                           ; Name         Instructions Cycles
  1073                           ; simple_byte            4     3 (average)
  1074                           ; direct_byte            8     6 (fixed)
  1075                           ; jumptable            260     6 (fixed)
  1076                           ;	Chosen strategy is simple_byte
  1077  017C  082E               	movf	(??_main+1)^(0+128),w
  1078  017D  3A00               	xorlw	0	; case 0
  1079  017E  1903               	skipnz
  1080  017F  2981               	goto	l2539
  1081  0180  2965               	goto	l2419
  1082  0181                     l2539:	
  1083                           
  1084                           ; Switch size 1, requested type "speed"
  1085                           ; Number of cases is 15, Range of values is 1 to 15
  1086                           ; switch strategies available:
  1087                           ; Name         Instructions Cycles
  1088                           ; direct_byte           39     9 (fixed)
  1089                           ; simple_byte           46    24 (average)
  1090                           ; jumptable            263     9 (fixed)
  1091                           ;	Chosen strategy is direct_byte
  1092  0181  082D               	movf	??_main^(0+128),w
  1093  0182  3EFF               	addlw	-1
  1094  0183  1C03               	skipc
  1095  0184  2965               	goto	l2419
  1096  0185  0084               	movwf	4
  1097  0186  300F               	movlw	15
  1098  0187  0204               	subwf	4,w
  1099  0188  1803               	skipnc
  1100  0189  2965               	goto	l2419
  1101  018A  3185               	movlp	high S2541
  1102  018B  3053               	movlw	low S2541
  1103  018C  0704               	addwf	4,w
  1104  018D  0082               	movwf	2
  1105  018E  288C               	ljmp	start
  1106  018F                     __end_of_main:	
  1107                           
  1108                           	psect	swtext1
  1109  0553                     __pswtext1:	
  1110  0553                     S2541:	
  1111  0553  28C1               	ljmp	l2435
  1112  0554  28C5               	ljmp	l2437
  1113  0555  28CF               	ljmp	l2439
  1114  0556  28D9               	ljmp	l2441
  1115  0557  28E3               	ljmp	l2443
  1116  0558  28F6               	ljmp	l2445
  1117  0559  2909               	ljmp	l2447
  1118  055A  291C               	ljmp	l2449
  1119  055B  2926               	ljmp	l2451
  1120  055C  2930               	ljmp	l2453
  1121  055D  293A               	ljmp	l2455
  1122  055E  2944               	ljmp	l2457
  1123  055F  294E               	ljmp	l2459
  1124  0560  2958               	ljmp	l2461
  1125  0561  2962               	ljmp	l243
  1126                           
  1127                           	psect	text1
  1128  0571                     __ptext1:	
  1129 ;; *************** function _tmr1_init *****************
  1130 ;; Defined at:
  1131 ;;		line 87 in file "main.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		status,2
  1140 ;; Tracked objects:
  1141 ;;		On entry : B1F/1
  1142 ;;		On exit  : B1F/1
  1143 ;;		Unchanged: B00/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1145 ;;      Params:         0       0       0       0
  1146 ;;      Locals:         0       0       0       0
  1147 ;;      Temps:          0       0       0       0
  1148 ;;      Totals:         0       0       0       0
  1149 ;;Total ram usage:        0 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    3
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           
  1160                           ;psect for function _tmr1_init
  1161  0571                     _tmr1_init:	
  1162                           
  1163                           ;main.c: 89:     TMR1CS0 = 0;
  1164                           
  1165                           ;incstack = 0
  1166                           ; Regs used in _tmr1_init: [status,2]
  1167  0571  0020               	movlb	0	; select bank0
  1168  0572  1318               	bcf	24,6	;volatile
  1169                           
  1170                           ;main.c: 90:     TMR1CS1 = 0;
  1171  0573  1398               	bcf	24,7	;volatile
  1172                           
  1173                           ;main.c: 92:     T1CKPS0 = 1;
  1174  0574  1618               	bsf	24,4	;volatile
  1175                           
  1176                           ;main.c: 93:     T1CKPS1 = 1;
  1177  0575  1698               	bsf	24,5	;volatile
  1178                           
  1179                           ;main.c: 94:     TMR1H = 0;
  1180  0576  0197               	clrf	23	;volatile
  1181                           
  1182                           ;main.c: 95:     TMR1L = 0;
  1183  0577  0196               	clrf	22	;volatile
  1184                           
  1185                           ;main.c: 97:     TMR1ON = 1;
  1186  0578  1418               	bsf	24,0	;volatile
  1187                           
  1188                           ;main.c: 99:     TMR1IF = 0;
  1189  0579  1011               	bcf	17,0	;volatile
  1190                           
  1191                           ;main.c: 101:     TMR1IE = 1;
  1192  057A  0021               	movlb	1	; select bank1
  1193  057B  1411               	bsf	17,0	;volatile
  1194                           
  1195                           ;main.c: 102:     GIE = 1;
  1196  057C  178B               	bsf	11,7	;volatile
  1197                           
  1198                           ;main.c: 103:     PEIE = 1;
  1199  057D  170B               	bsf	11,6	;volatile
  1200  057E  0008               	return
  1201  057F                     __end_of_tmr1_init:	
  1202                           
  1203                           	psect	text2
  1204  057F                     __ptext2:	
  1205 ;; *************** function _tmr0_init *****************
  1206 ;; Defined at:
  1207 ;;		line 74 in file "main.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg
  1216 ;; Tracked objects:
  1217 ;;		On entry : B1F/1
  1218 ;;		On exit  : B1F/0
  1219 ;;		Unchanged: B00/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1221 ;;      Params:         0       0       0       0
  1222 ;;      Locals:         0       0       0       0
  1223 ;;      Temps:          0       0       0       0
  1224 ;;      Totals:         0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    3
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           
  1236                           ;psect for function _tmr0_init
  1237  057F                     _tmr0_init:	
  1238                           
  1239                           ;main.c: 75:     TMR0CS = 0;
  1240                           
  1241                           ;incstack = 0
  1242                           ; Regs used in _tmr0_init: [wreg]
  1243  057F  1295               	bcf	21,5	;volatile
  1244                           
  1245                           ;main.c: 76:     PSA = 0;
  1246  0580  1195               	bcf	21,3	;volatile
  1247                           
  1248                           ;main.c: 77:     OPTION_REGbits.PS2 = 1;
  1249  0581  1515               	bsf	21,2	;volatile
  1250                           
  1251                           ;main.c: 78:     OPTION_REGbits.PS1 = 0;
  1252  0582  1095               	bcf	21,1	;volatile
  1253                           
  1254                           ;main.c: 79:     OPTION_REGbits.PS0 = 0;
  1255  0583  1015               	bcf	21,0	;volatile
  1256                           
  1257                           ;main.c: 80:     TMR0 = 5;
  1258  0584  3005               	movlw	5
  1259  0585  0020               	movlb	0	; select bank0
  1260  0586  0095               	movwf	21	;volatile
  1261                           
  1262                           ;main.c: 81:     T0IE = 1;
  1263  0587  168B               	bsf	11,5	;volatile
  1264                           
  1265                           ;main.c: 82:     T0IF = 0;
  1266  0588  110B               	bcf	11,2	;volatile
  1267                           
  1268                           ;main.c: 83:     GIE = 1;
  1269  0589  178B               	bsf	11,7	;volatile
  1270                           
  1271                           ;main.c: 84:     PEIE = 1;
  1272  058A  170B               	bsf	11,6	;volatile
  1273  058B  0008               	return
  1274  058C                     __end_of_tmr0_init:	
  1275                           
  1276                           	psect	text3
  1277  0500                     __ptext3:	
  1278 ;; *************** function _pwm3_init *****************
  1279 ;; Defined at:
  1280 ;;		line 155 in file "main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		status,2
  1289 ;; Tracked objects:
  1290 ;;		On entry : B1F/1B
  1291 ;;		On exit  : B1F/1B
  1292 ;;		Unchanged: B00/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1294 ;;      Params:         0       0       0       0
  1295 ;;      Locals:         0       0       0       0
  1296 ;;      Temps:          0       0       0       0
  1297 ;;      Totals:         0       0       0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    3
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _pwm3_init
  1310  0500                     _pwm3_init:	
  1311                           
  1312                           ;main.c: 156:     PWM3PH = 0;
  1313                           
  1314                           ;incstack = 0
  1315                           ; Regs used in _pwm3_init: [status,2]
  1316  0500  01B1               	clrf	49	;volatile
  1317  0501  01B2               	clrf	50	;volatile
  1318                           
  1319                           ;main.c: 157:     PWM3DC = 0;
  1320  0502  01B3               	clrf	51	;volatile
  1321  0503  01B4               	clrf	52	;volatile
  1322                           
  1323                           ;main.c: 158:     PWM3PR = 1000;
  1324  0504  3003               	movlw	3
  1325  0505  00B6               	movwf	54	;volatile
  1326  0506  30E8               	movlw	232
  1327  0507  00B5               	movwf	53	;volatile
  1328                           
  1329                           ;main.c: 160:     PWM3CONbits.MODE0 = 0;
  1330  0508  113B               	bcf	59,2	;volatile
  1331                           
  1332                           ;main.c: 161:     PWM3CONbits.MODE1 = 0;
  1333  0509  11BB               	bcf	59,3	;volatile
  1334                           
  1335                           ;main.c: 163:     PWM3OFCONbits.OFM0 = 0;
  1336  050A  12C0               	bcf	64,5	;volatile
  1337                           
  1338                           ;main.c: 164:     PWM3OFCONbits.OFM1 = 0;
  1339  050B  1340               	bcf	64,6	;volatile
  1340                           
  1341                           ;main.c: 166:     PWM3CLKCONbits.CS0 = 0;
  1342  050C  103E               	bcf	62,0	;volatile
  1343                           
  1344                           ;main.c: 167:     PWM3CLKCONbits.CS1 = 0;
  1345  050D  10BE               	bcf	62,1	;volatile
  1346                           
  1347                           ;main.c: 169:     PWM3CLKCONbits.PS0 = 1;
  1348  050E  163E               	bsf	62,4	;volatile
  1349                           
  1350                           ;main.c: 170:     PWM3CLKCONbits.PS1 = 0;
  1351  050F  12BE               	bcf	62,5	;volatile
  1352                           
  1353                           ;main.c: 171:     PWM3CLKCONbits.PS2 = 0;
  1354  0510  133E               	bcf	62,6	;volatile
  1355                           
  1356                           ;main.c: 173:     PWM3CONbits.EN = 1;
  1357  0511  17BB               	bsf	59,7	;volatile
  1358                           
  1359                           ;main.c: 174:     PWM3CONbits.OE = 1;
  1360  0512  173B               	bsf	59,6	;volatile
  1361                           
  1362                           ;main.c: 175:     PWM3CONbits.POL = 0;
  1363  0513  123B               	bcf	59,4	;volatile
  1364  0514  0008               	return
  1365  0515                     __end_of_pwm3_init:	
  1366                           
  1367                           	psect	text4
  1368  0515                     __ptext4:	
  1369 ;; *************** function _pwm2_init *****************
  1370 ;; Defined at:
  1371 ;;		line 107 in file "main.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		status,2
  1380 ;; Tracked objects:
  1381 ;;		On entry : B1F/1B
  1382 ;;		On exit  : B1F/1B
  1383 ;;		Unchanged: B00/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1385 ;;      Params:         0       0       0       0
  1386 ;;      Locals:         0       0       0       0
  1387 ;;      Temps:          0       0       0       0
  1388 ;;      Totals:         0       0       0       0
  1389 ;;Total ram usage:        0 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    3
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           
  1400                           ;psect for function _pwm2_init
  1401  0515                     _pwm2_init:	
  1402                           
  1403                           ;main.c: 108:     PWM2PH = 0;
  1404                           
  1405                           ;incstack = 0
  1406                           ; Regs used in _pwm2_init: [status,2]
  1407  0515  01A1               	clrf	33	;volatile
  1408  0516  01A2               	clrf	34	;volatile
  1409                           
  1410                           ;main.c: 109:     PWM2DC = 0;
  1411  0517  01A3               	clrf	35	;volatile
  1412  0518  01A4               	clrf	36	;volatile
  1413                           
  1414                           ;main.c: 110:     PWM2PR = 1000;
  1415  0519  3003               	movlw	3
  1416  051A  00A6               	movwf	38	;volatile
  1417  051B  30E8               	movlw	232
  1418  051C  00A5               	movwf	37	;volatile
  1419                           
  1420                           ;main.c: 112:     PWM2CONbits.MODE0 = 0;
  1421  051D  112B               	bcf	43,2	;volatile
  1422                           
  1423                           ;main.c: 113:     PWM2CONbits.MODE1 = 0;
  1424  051E  11AB               	bcf	43,3	;volatile
  1425                           
  1426                           ;main.c: 115:     PWM2OFCONbits.OFM0 = 0;
  1427  051F  12B0               	bcf	48,5	;volatile
  1428                           
  1429                           ;main.c: 116:     PWM2OFCONbits.OFM1 = 0;
  1430  0520  1330               	bcf	48,6	;volatile
  1431                           
  1432                           ;main.c: 118:     PWM2CLKCONbits.CS0 = 0;
  1433  0521  102E               	bcf	46,0	;volatile
  1434                           
  1435                           ;main.c: 119:     PWM2CLKCONbits.CS1 = 0;
  1436  0522  10AE               	bcf	46,1	;volatile
  1437                           
  1438                           ;main.c: 121:     PWM2CLKCONbits.PS0 = 1;
  1439  0523  162E               	bsf	46,4	;volatile
  1440                           
  1441                           ;main.c: 122:     PWM2CLKCONbits.PS1 = 0;
  1442  0524  12AE               	bcf	46,5	;volatile
  1443                           
  1444                           ;main.c: 123:     PWM2CLKCONbits.PS2 = 0;
  1445  0525  132E               	bcf	46,6	;volatile
  1446                           
  1447                           ;main.c: 125:     PWM2CONbits.EN = 1;
  1448  0526  17AB               	bsf	43,7	;volatile
  1449                           
  1450                           ;main.c: 126:     PWM2CONbits.OE = 1;
  1451  0527  172B               	bsf	43,6	;volatile
  1452                           
  1453                           ;main.c: 127:     PWM2CONbits.POL = 0;
  1454  0528  122B               	bcf	43,4	;volatile
  1455  0529  0008               	return
  1456  052A                     __end_of_pwm2_init:	
  1457                           
  1458                           	psect	text5
  1459  04D4                     __ptext5:	
  1460 ;; *************** function _pwm1_init *****************
  1461 ;; Defined at:
  1462 ;;		line 131 in file "main.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		status,2
  1471 ;; Tracked objects:
  1472 ;;		On entry : B1F/7
  1473 ;;		On exit  : B1F/1B
  1474 ;;		Unchanged: B00/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1476 ;;      Params:         0       0       0       0
  1477 ;;      Locals:         0       0       0       0
  1478 ;;      Temps:          0       0       0       0
  1479 ;;      Totals:         0       0       0       0
  1480 ;;Total ram usage:        0 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    3
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           
  1491                           ;psect for function _pwm1_init
  1492  04D4                     _pwm1_init:	
  1493                           
  1494                           ;main.c: 132:     PWM1PH = 0;
  1495                           
  1496                           ;incstack = 0
  1497                           ; Regs used in _pwm1_init: [status,2]
  1498  04D4  003B               	movlb	27	; select bank27
  1499  04D5  0191               	clrf	17	;volatile
  1500  04D6  0192               	clrf	18	;volatile
  1501                           
  1502                           ;main.c: 133:     PWM1DC = 0;
  1503  04D7  0193               	clrf	19	;volatile
  1504  04D8  0194               	clrf	20	;volatile
  1505                           
  1506                           ;main.c: 134:     PWM1PR = 1000;
  1507  04D9  3003               	movlw	3
  1508  04DA  0096               	movwf	22	;volatile
  1509  04DB  30E8               	movlw	232
  1510  04DC  0095               	movwf	21	;volatile
  1511                           
  1512                           ;main.c: 136:     PWM1CONbits.MODE0 = 0;
  1513  04DD  111B               	bcf	27,2	;volatile
  1514                           
  1515                           ;main.c: 137:     PWM1CONbits.MODE1 = 0;
  1516  04DE  119B               	bcf	27,3	;volatile
  1517                           
  1518                           ;main.c: 139:     PWM1OFCONbits.OFM0 = 0;
  1519  04DF  12A0               	bcf	32,5	;volatile
  1520                           
  1521                           ;main.c: 140:     PWM1OFCONbits.OFM1 = 0;
  1522  04E0  1320               	bcf	32,6	;volatile
  1523                           
  1524                           ;main.c: 142:     PWM1CLKCONbits.CS0 = 0;
  1525  04E1  101E               	bcf	30,0	;volatile
  1526                           
  1527                           ;main.c: 143:     PWM1CLKCONbits.CS1 = 0;
  1528  04E2  109E               	bcf	30,1	;volatile
  1529                           
  1530                           ;main.c: 145:     PWM1CLKCONbits.PS0 = 1;
  1531  04E3  161E               	bsf	30,4	;volatile
  1532                           
  1533                           ;main.c: 146:     PWM1CLKCONbits.PS1 = 0;
  1534  04E4  129E               	bcf	30,5	;volatile
  1535                           
  1536                           ;main.c: 147:     PWM1CLKCONbits.PS2 = 0;
  1537  04E5  131E               	bcf	30,6	;volatile
  1538                           
  1539                           ;main.c: 149:     PWM1CONbits.EN = 1;
  1540  04E6  179B               	bsf	27,7	;volatile
  1541                           
  1542                           ;main.c: 150:     PWM1CONbits.OE = 1;
  1543  04E7  171B               	bsf	27,6	;volatile
  1544                           
  1545                           ;main.c: 151:     PWM1CONbits.POL = 0;
  1546  04E8  121B               	bcf	27,4	;volatile
  1547  04E9  0008               	return
  1548  04EA                     __end_of_pwm1_init:	
  1549                           
  1550                           	psect	text6
  1551  04EA                     __ptext6:	
  1552 ;; *************** function _port_setup *****************
  1553 ;; Defined at:
  1554 ;;		line 204 in file "main.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		status,2
  1563 ;; Tracked objects:
  1564 ;;		On entry : B1F/0
  1565 ;;		On exit  : B1F/7
  1566 ;;		Unchanged: B00/0
  1567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1568 ;;      Params:         0       0       0       0
  1569 ;;      Locals:         0       0       0       0
  1570 ;;      Temps:          0       0       0       0
  1571 ;;      Totals:         0       0       0       0
  1572 ;;Total ram usage:        0 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; Hardware stack levels required when called:    3
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           
  1583                           ;psect for function _port_setup
  1584  04EA                     _port_setup:	
  1585                           
  1586                           ;main.c: 205:     ANSELAbits.ANSA0 = 0;
  1587                           
  1588                           ;incstack = 0
  1589                           ; Regs used in _port_setup: [status,2]
  1590  04EA  0023               	movlb	3	; select bank3
  1591  04EB  100C               	bcf	12,0	;volatile
  1592                           
  1593                           ;main.c: 206:     ANSELAbits.ANSA1 = 0;
  1594  04EC  108C               	bcf	12,1	;volatile
  1595                           
  1596                           ;main.c: 207:     ANSELAbits.ANSA2 = 0;
  1597  04ED  110C               	bcf	12,2	;volatile
  1598                           
  1599                           ;main.c: 208:     ANSELAbits.ANSA4 = 1;
  1600  04EE  160C               	bsf	12,4	;volatile
  1601                           
  1602                           ;main.c: 209:     WPUA = 0x00;
  1603  04EF  0024               	movlb	4	; select bank4
  1604  04F0  018C               	clrf	12	;volatile
  1605                           
  1606                           ;main.c: 210:     TRISAbits.TRISA0 = 0;
  1607  04F1  0021               	movlb	1	; select bank1
  1608  04F2  100C               	bcf	12,0	;volatile
  1609                           
  1610                           ;main.c: 211:     TRISAbits.TRISA1 = 0;
  1611  04F3  108C               	bcf	12,1	;volatile
  1612                           
  1613                           ;main.c: 212:     TRISAbits.TRISA2 = 0;
  1614  04F4  110C               	bcf	12,2	;volatile
  1615                           
  1616                           ;main.c: 213:     TRISAbits.TRISA4 = 1;
  1617  04F5  160C               	bsf	12,4	;volatile
  1618                           
  1619                           ;main.c: 214:     TRISAbits.TRISA5 = 1;
  1620  04F6  168C               	bsf	12,5	;volatile
  1621                           
  1622                           ;main.c: 216:     IOCANbits.IOCAN5 = 1;
  1623  04F7  0027               	movlb	7	; select bank7
  1624  04F8  1692               	bsf	18,5	;volatile
  1625                           
  1626                           ;main.c: 217:     IOCAPbits.IOCAP5 = 0;
  1627  04F9  1291               	bcf	17,5	;volatile
  1628                           
  1629                           ;main.c: 218:     IOCIE = 1;
  1630  04FA  158B               	bsf	11,3	;volatile
  1631                           
  1632                           ;main.c: 219:     IOCIF = 0;
  1633  04FB  100B               	bcf	11,0	;volatile
  1634                           
  1635                           ;main.c: 220:     IOCAFbits.IOCAF5 = 0;
  1636  04FC  1293               	bcf	19,5	;volatile
  1637                           
  1638                           ;main.c: 221:     GIE = 1;
  1639  04FD  178B               	bsf	11,7	;volatile
  1640                           
  1641                           ;main.c: 222:     PEIE = 1;
  1642  04FE  170B               	bsf	11,6	;volatile
  1643  04FF  0008               	return
  1644  0500                     __end_of_port_setup:	
  1645                           
  1646                           	psect	text7
  1647  058C                     __ptext7:	
  1648 ;; *************** function _osc_setup *****************
  1649 ;; Defined at:
  1650 ;;		line 43 in file "main.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		None
  1659 ;; Tracked objects:
  1660 ;;		On entry : B1F/0
  1661 ;;		On exit  : B1F/1
  1662 ;;		Unchanged: B00/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1664 ;;      Params:         0       0       0       0
  1665 ;;      Locals:         0       0       0       0
  1666 ;;      Temps:          0       0       0       0
  1667 ;;      Totals:         0       0       0       0
  1668 ;;Total ram usage:        0 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    3
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           
  1679                           ;psect for function _osc_setup
  1680  058C                     _osc_setup:	
  1681                           
  1682                           ;main.c: 45:     OSCCONbits.SPLLEN = 1;
  1683                           
  1684                           ;incstack = 0
  1685                           ; Regs used in _osc_setup: []
  1686  058C  0021               	movlb	1	; select bank1
  1687  058D  1799               	bsf	25,7	;volatile
  1688                           
  1689                           ;main.c: 47:     OSCCONbits.IRCF0 = 0;
  1690  058E  1199               	bcf	25,3	;volatile
  1691                           
  1692                           ;main.c: 48:     OSCCONbits.IRCF1 = 1;
  1693  058F  1619               	bsf	25,4	;volatile
  1694                           
  1695                           ;main.c: 49:     OSCCONbits.IRCF2 = 1;
  1696  0590  1699               	bsf	25,5	;volatile
  1697                           
  1698                           ;main.c: 50:     OSCCONbits.IRCF3 = 1;
  1699  0591  1719               	bsf	25,6	;volatile
  1700                           
  1701                           ;main.c: 52:     OSCCONbits.SCS0 = 0;
  1702  0592  1019               	bcf	25,0	;volatile
  1703                           
  1704                           ;main.c: 53:     OSCCONbits.SCS1 = 0;
  1705  0593  1099               	bcf	25,1	;volatile
  1706  0594  0008               	return
  1707  0595                     __end_of_osc_setup:	
  1708                           
  1709                           	psect	text8
  1710  0595                     __ptext8:	
  1711 ;; *************** function _millis *****************
  1712 ;; Defined at:
  1713 ;;		line 70 in file "main.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  2    0[BANK1 ] unsigned int 
  1720 ;; Registers used:
  1721 ;;		wreg
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/1
  1724 ;;		On exit  : 1F/1
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1727 ;;      Params:         0       0       2       0
  1728 ;;      Locals:         0       0       0       0
  1729 ;;      Temps:          0       0       0       0
  1730 ;;      Totals:         0       0       2       0
  1731 ;;Total ram usage:        2 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:    3
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function _millis
  1743  0595                     _millis:	
  1744                           
  1745                           ;main.c: 71:     return (millis_count);
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _millis: [wreg]
  1749  0595  0020               	movlb	0	; select bank0
  1750  0596  0849               	movf	_millis_count+1,w
  1751  0597  0021               	movlb	1	; select bank1
  1752  0598  00A1               	movwf	(?_millis+1)^(0+128)
  1753  0599  0020               	movlb	0	; select bank0
  1754  059A  0848               	movf	_millis_count,w
  1755  059B  0021               	movlb	1	; select bank1
  1756  059C  00A0               	movwf	?_millis^(0+128)
  1757  059D  0008               	return
  1758  059E                     __end_of_millis:	
  1759                           
  1760                           	psect	text9
  1761  03F6                     __ptext9:	
  1762 ;; *************** function _miganie *****************
  1763 ;; Defined at:
  1764 ;;		line 251 in file "main.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  del             2    9[BANK1 ] unsigned short 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 1F/1
  1775 ;;		On exit  : 1F/1
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1778 ;;      Params:         0       0       2       0
  1779 ;;      Locals:         0       0       0       0
  1780 ;;      Temps:          0       0       0       0
  1781 ;;      Totals:         0       0       2       0
  1782 ;;Total ram usage:        2 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    5
  1785 ;; This function calls:
  1786 ;;		_BLUE_LED
  1787 ;;		_GREEN_LED
  1788 ;;		_RED_LED
  1789 ;;		_delay_ms
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _miganie
  1797  03F6                     _miganie:	
  1798                           
  1799                           ;main.c: 252:     GREEN_LED(100);
  1800                           
  1801                           ;incstack = 0
  1802                           ; Regs used in _miganie: [wreg+status,2+status,0+pclath+cstack]
  1803  03F6  3064               	movlw	100
  1804  03F7  00A6               	movwf	GREEN_LED@duty^(0+128)
  1805  03F8  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  1806  03F9  2482               	fcall	_GREEN_LED
  1807                           
  1808                           ;main.c: 253:     RED_LED(100);
  1809  03FA  3064               	movlw	100
  1810  03FB  0021               	movlb	1	; select bank1
  1811  03FC  00A6               	movwf	RED_LED@duty^(0+128)
  1812  03FD  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  1813  03FE  2465               	fcall	_RED_LED
  1814                           
  1815                           ;main.c: 254:     BLUE_LED(100);
  1816  03FF  3064               	movlw	100
  1817  0400  0021               	movlb	1	; select bank1
  1818  0401  00A6               	movwf	BLUE_LED@duty^(0+128)
  1819  0402  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  1820  0403  249F               	fcall	_BLUE_LED
  1821                           
  1822                           ;main.c: 255:     delay_ms(del);
  1823  0404  0021               	movlb	1	; select bank1
  1824  0405  082A               	movf	(miganie@del+1)^(0+128),w
  1825  0406  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  1826  0407  0829               	movf	miganie@del^(0+128),w
  1827  0408  00A0               	movwf	delay_ms@milliseconds^(0+128)
  1828  0409  24BC               	fcall	_delay_ms
  1829                           
  1830                           ;main.c: 256:     GREEN_LED(0);
  1831  040A  01A6               	clrf	GREEN_LED@duty^(0+128)
  1832  040B  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  1833  040C  2482               	fcall	_GREEN_LED
  1834                           
  1835                           ;main.c: 257:     RED_LED(0);
  1836  040D  0021               	movlb	1	; select bank1
  1837  040E  01A6               	clrf	RED_LED@duty^(0+128)
  1838  040F  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  1839  0410  2465               	fcall	_RED_LED
  1840                           
  1841                           ;main.c: 258:     BLUE_LED(0);
  1842  0411  0021               	movlb	1	; select bank1
  1843  0412  01A6               	clrf	BLUE_LED@duty^(0+128)
  1844  0413  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  1845  0414  249F               	fcall	_BLUE_LED
  1846                           
  1847                           ;main.c: 259:     delay_ms(del);
  1848  0415  0021               	movlb	1	; select bank1
  1849  0416  082A               	movf	(miganie@del+1)^(0+128),w
  1850  0417  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  1851  0418  0829               	movf	miganie@del^(0+128),w
  1852  0419  00A0               	movwf	delay_ms@milliseconds^(0+128)
  1853  041A  2CBC               	ljmp	l2063
  1854  041B                     __end_of_miganie:	
  1855                           
  1856                           	psect	text10
  1857  0384                     __ptext10:	
  1858 ;; *************** function _begogonGR *****************
  1859 ;; Defined at:
  1860 ;;		line 371 in file "main.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  del             2    9[BANK1 ] unsigned short 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0, pclath, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 1F/1
  1871 ;;		On exit  : 1F/1
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1874 ;;      Params:         0       0       2       0
  1875 ;;      Locals:         0       0       0       0
  1876 ;;      Temps:          0       0       0       0
  1877 ;;      Totals:         0       0       2       0
  1878 ;;Total ram usage:        2 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    5
  1881 ;; This function calls:
  1882 ;;		_BLUE_LED
  1883 ;;		_GREEN_LED
  1884 ;;		_RED_LED
  1885 ;;		_delay_ms
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           
  1892                           ;psect for function _begogonGR
  1893  0384                     _begogonGR:	
  1894                           
  1895                           ;main.c: 372:     GREEN_LED(100);
  1896                           
  1897                           ;incstack = 0
  1898                           ; Regs used in _begogonGR: [wreg+status,2+status,0+pclath+cstack]
  1899  0384  3064               	movlw	100
  1900  0385  00A6               	movwf	GREEN_LED@duty^(0+128)
  1901  0386  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  1902  0387  2482               	fcall	_GREEN_LED
  1903                           
  1904                           ;main.c: 373:     RED_LED(0);
  1905  0388  0021               	movlb	1	; select bank1
  1906  0389  01A6               	clrf	RED_LED@duty^(0+128)
  1907  038A  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  1908  038B  2465               	fcall	_RED_LED
  1909                           
  1910                           ;main.c: 374:     BLUE_LED(100);
  1911  038C  3064               	movlw	100
  1912  038D  0021               	movlb	1	; select bank1
  1913  038E  00A6               	movwf	BLUE_LED@duty^(0+128)
  1914  038F  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  1915  0390  249F               	fcall	_BLUE_LED
  1916                           
  1917                           ;main.c: 375:     delay_ms(del);
  1918  0391  0021               	movlb	1	; select bank1
  1919  0392  082A               	movf	(begogonGR@del+1)^(0+128),w
  1920  0393  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  1921  0394  0829               	movf	begogonGR@del^(0+128),w
  1922  0395  00A0               	movwf	delay_ms@milliseconds^(0+128)
  1923  0396  24BC               	fcall	_delay_ms
  1924                           
  1925                           ;main.c: 376:     GREEN_LED(0);
  1926  0397  01A6               	clrf	GREEN_LED@duty^(0+128)
  1927  0398  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  1928  0399  2482               	fcall	_GREEN_LED
  1929                           
  1930                           ;main.c: 377:     RED_LED(100);
  1931  039A  3064               	movlw	100
  1932  039B  0021               	movlb	1	; select bank1
  1933  039C  00A6               	movwf	RED_LED@duty^(0+128)
  1934  039D  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  1935  039E  2465               	fcall	_RED_LED
  1936                           
  1937                           ;main.c: 378:     BLUE_LED(100);
  1938  039F  3064               	movlw	100
  1939  03A0  0021               	movlb	1	; select bank1
  1940  03A1  00A6               	movwf	BLUE_LED@duty^(0+128)
  1941  03A2  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  1942  03A3  249F               	fcall	_BLUE_LED
  1943                           
  1944                           ;main.c: 379:     delay_ms(del);
  1945  03A4  0021               	movlb	1	; select bank1
  1946  03A5  082A               	movf	(begogonGR@del+1)^(0+128),w
  1947  03A6  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  1948  03A7  0829               	movf	begogonGR@del^(0+128),w
  1949  03A8  00A0               	movwf	delay_ms@milliseconds^(0+128)
  1950  03A9  2CBC               	ljmp	l2063
  1951  03AA                     __end_of_begogonGR:	
  1952                           
  1953                           	psect	text11
  1954  03AA                     __ptext11:	
  1955 ;; *************** function _begogonGB *****************
  1956 ;; Defined at:
  1957 ;;		line 349 in file "main.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  del             2    9[BANK1 ] unsigned short 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;		None
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0, pclath, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 1F/1
  1968 ;;		On exit  : 1F/1
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1971 ;;      Params:         0       0       2       0
  1972 ;;      Locals:         0       0       0       0
  1973 ;;      Temps:          0       0       0       0
  1974 ;;      Totals:         0       0       2       0
  1975 ;;Total ram usage:        2 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    5
  1978 ;; This function calls:
  1979 ;;		_BLUE_LED
  1980 ;;		_GREEN_LED
  1981 ;;		_RED_LED
  1982 ;;		_delay_ms
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           
  1989                           ;psect for function _begogonGB
  1990  03AA                     _begogonGB:	
  1991                           
  1992                           ;main.c: 350:     GREEN_LED(100);
  1993                           
  1994                           ;incstack = 0
  1995                           ; Regs used in _begogonGB: [wreg+status,2+status,0+pclath+cstack]
  1996  03AA  3064               	movlw	100
  1997  03AB  00A6               	movwf	GREEN_LED@duty^(0+128)
  1998  03AC  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  1999  03AD  2482               	fcall	_GREEN_LED
  2000                           
  2001                           ;main.c: 351:     RED_LED(100);
  2002  03AE  3064               	movlw	100
  2003  03AF  0021               	movlb	1	; select bank1
  2004  03B0  00A6               	movwf	RED_LED@duty^(0+128)
  2005  03B1  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  2006  03B2  2465               	fcall	_RED_LED
  2007                           
  2008                           ;main.c: 352:     BLUE_LED(0);
  2009  03B3  0021               	movlb	1	; select bank1
  2010  03B4  01A6               	clrf	BLUE_LED@duty^(0+128)
  2011  03B5  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  2012  03B6  249F               	fcall	_BLUE_LED
  2013                           
  2014                           ;main.c: 353:     delay_ms(del);
  2015  03B7  0021               	movlb	1	; select bank1
  2016  03B8  082A               	movf	(begogonGB@del+1)^(0+128),w
  2017  03B9  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2018  03BA  0829               	movf	begogonGB@del^(0+128),w
  2019  03BB  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2020  03BC  24BC               	fcall	_delay_ms
  2021                           
  2022                           ;main.c: 354:     GREEN_LED(0);
  2023  03BD  01A6               	clrf	GREEN_LED@duty^(0+128)
  2024  03BE  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  2025  03BF  2482               	fcall	_GREEN_LED
  2026                           
  2027                           ;main.c: 355:     RED_LED(100);
  2028  03C0  3064               	movlw	100
  2029  03C1  0021               	movlb	1	; select bank1
  2030  03C2  00A6               	movwf	RED_LED@duty^(0+128)
  2031  03C3  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  2032  03C4  2465               	fcall	_RED_LED
  2033                           
  2034                           ;main.c: 356:     BLUE_LED(100);
  2035  03C5  3064               	movlw	100
  2036  03C6  0021               	movlb	1	; select bank1
  2037  03C7  00A6               	movwf	BLUE_LED@duty^(0+128)
  2038  03C8  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  2039  03C9  249F               	fcall	_BLUE_LED
  2040                           
  2041                           ;main.c: 357:     delay_ms(del);
  2042  03CA  0021               	movlb	1	; select bank1
  2043  03CB  082A               	movf	(begogonGB@del+1)^(0+128),w
  2044  03CC  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2045  03CD  0829               	movf	begogonGB@del^(0+128),w
  2046  03CE  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2047  03CF  2CBC               	ljmp	l2063
  2048  03D0                     __end_of_begogonGB:	
  2049                           
  2050                           	psect	text12
  2051  03D0                     __ptext12:	
  2052 ;; *************** function _begogonBR *****************
  2053 ;; Defined at:
  2054 ;;		line 360 in file "main.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  del             2    9[BANK1 ] unsigned short 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0, pclath, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 1F/1
  2065 ;;		On exit  : 1F/1
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2068 ;;      Params:         0       0       2       0
  2069 ;;      Locals:         0       0       0       0
  2070 ;;      Temps:          0       0       0       0
  2071 ;;      Totals:         0       0       2       0
  2072 ;;Total ram usage:        2 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    5
  2075 ;; This function calls:
  2076 ;;		_BLUE_LED
  2077 ;;		_GREEN_LED
  2078 ;;		_RED_LED
  2079 ;;		_delay_ms
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _begogonBR
  2087  03D0                     _begogonBR:	
  2088                           
  2089                           ;main.c: 361:     GREEN_LED(100);
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in _begogonBR: [wreg+status,2+status,0+pclath+cstack]
  2093  03D0  3064               	movlw	100
  2094  03D1  00A6               	movwf	GREEN_LED@duty^(0+128)
  2095  03D2  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  2096  03D3  2482               	fcall	_GREEN_LED
  2097                           
  2098                           ;main.c: 362:     RED_LED(100);
  2099  03D4  3064               	movlw	100
  2100  03D5  0021               	movlb	1	; select bank1
  2101  03D6  00A6               	movwf	RED_LED@duty^(0+128)
  2102  03D7  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  2103  03D8  2465               	fcall	_RED_LED
  2104                           
  2105                           ;main.c: 363:     BLUE_LED(0);
  2106  03D9  0021               	movlb	1	; select bank1
  2107  03DA  01A6               	clrf	BLUE_LED@duty^(0+128)
  2108  03DB  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  2109  03DC  249F               	fcall	_BLUE_LED
  2110                           
  2111                           ;main.c: 364:     delay_ms(del);
  2112  03DD  0021               	movlb	1	; select bank1
  2113  03DE  082A               	movf	(begogonBR@del+1)^(0+128),w
  2114  03DF  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2115  03E0  0829               	movf	begogonBR@del^(0+128),w
  2116  03E1  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2117  03E2  24BC               	fcall	_delay_ms
  2118                           
  2119                           ;main.c: 365:     GREEN_LED(100);
  2120  03E3  3064               	movlw	100
  2121  03E4  00A6               	movwf	GREEN_LED@duty^(0+128)
  2122  03E5  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  2123  03E6  2482               	fcall	_GREEN_LED
  2124                           
  2125                           ;main.c: 366:     RED_LED(0);
  2126  03E7  0021               	movlb	1	; select bank1
  2127  03E8  01A6               	clrf	RED_LED@duty^(0+128)
  2128  03E9  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  2129  03EA  2465               	fcall	_RED_LED
  2130                           
  2131                           ;main.c: 367:     BLUE_LED(100);
  2132  03EB  3064               	movlw	100
  2133  03EC  0021               	movlb	1	; select bank1
  2134  03ED  00A6               	movwf	BLUE_LED@duty^(0+128)
  2135  03EE  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  2136  03EF  249F               	fcall	_BLUE_LED
  2137                           
  2138                           ;main.c: 368:     delay_ms(del);
  2139  03F0  0021               	movlb	1	; select bank1
  2140  03F1  082A               	movf	(begogonBR@del+1)^(0+128),w
  2141  03F2  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2142  03F3  0829               	movf	begogonBR@del^(0+128),w
  2143  03F4  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2144  03F5  2CBC               	ljmp	l2063
  2145  03F6                     __end_of_begogonBR:	
  2146                           
  2147                           	psect	text13
  2148  029B                     __ptext13:	
  2149 ;; *************** function _begogon3 *****************
  2150 ;; Defined at:
  2151 ;;		line 317 in file "main.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  del             2    9[BANK1 ] unsigned short 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  count_up        1   12[BANK1 ] unsigned char 
  2156 ;;  count_down      1   11[BANK1 ] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 1F/1
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2166 ;;      Params:         0       0       2       0
  2167 ;;      Locals:         0       0       2       0
  2168 ;;      Temps:          0       0       0       0
  2169 ;;      Totals:         0       0       4       0
  2170 ;;Total ram usage:        4 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    5
  2173 ;; This function calls:
  2174 ;;		_BLUE_LED
  2175 ;;		_GREEN_LED
  2176 ;;		_RED_LED
  2177 ;;		_delay_ms
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           
  2184                           ;psect for function _begogon3
  2185  029B                     _begogon3:	
  2186                           
  2187                           ;main.c: 318:     uint8_t count_up, count_down;;main.c: 319:     count_down = 100;
  2188                           
  2189                           ;incstack = 0
  2190                           ; Regs used in _begogon3: [wreg+status,2+status,0+pclath+cstack]
  2191  029B  3064               	movlw	100
  2192  029C  00AB               	movwf	begogon3@count_down^(0+128)
  2193                           
  2194                           ;main.c: 320:     GREEN_LED(0);
  2195  029D  01A6               	clrf	GREEN_LED@duty^(0+128)
  2196  029E  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  2197  029F  2482               	fcall	_GREEN_LED
  2198                           
  2199                           ;main.c: 321:     RED_LED(0);
  2200  02A0  0021               	movlb	1	; select bank1
  2201  02A1  01A6               	clrf	RED_LED@duty^(0+128)
  2202  02A2  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  2203  02A3  2465               	fcall	_RED_LED
  2204                           
  2205                           ;main.c: 322:     BLUE_LED(0);
  2206  02A4  0021               	movlb	1	; select bank1
  2207  02A5  01A6               	clrf	BLUE_LED@duty^(0+128)
  2208  02A6  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  2209  02A7  249F               	fcall	_BLUE_LED
  2210                           
  2211                           ;main.c: 323:     for (count_up = 0; count_up < 100; count_up = count_up + 5) {
  2212  02A8  0021               	movlb	1	; select bank1
  2213  02A9  01AC               	clrf	begogon3@count_up^(0+128)
  2214  02AA                     l2337:	
  2215                           
  2216                           ;main.c: 324:         count_down = count_down - 5;
  2217  02AA  30FB               	movlw	251
  2218  02AB  07AB               	addwf	begogon3@count_down^(0+128),f
  2219                           
  2220                           ;main.c: 325:         RED_LED(count_down);
  2221  02AC  082B               	movf	begogon3@count_down^(0+128),w
  2222  02AD  00A6               	movwf	RED_LED@duty^(0+128)
  2223  02AE  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  2224  02AF  2465               	fcall	_RED_LED
  2225                           
  2226                           ;main.c: 326:         BLUE_LED(count_up);
  2227  02B0  0021               	movlb	1	; select bank1
  2228  02B1  082C               	movf	begogon3@count_up^(0+128),w
  2229  02B2  00A6               	movwf	BLUE_LED@duty^(0+128)
  2230  02B3  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  2231  02B4  249F               	fcall	_BLUE_LED
  2232                           
  2233                           ;main.c: 327:         delay_ms(del);
  2234  02B5  0021               	movlb	1	; select bank1
  2235  02B6  082A               	movf	(begogon3@del+1)^(0+128),w
  2236  02B7  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2237  02B8  0829               	movf	begogon3@del^(0+128),w
  2238  02B9  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2239  02BA  24BC               	fcall	_delay_ms
  2240                           
  2241                           ;main.c: 328:     }
  2242  02BB  3005               	movlw	5
  2243  02BC  07AC               	addwf	begogon3@count_up^(0+128),f
  2244  02BD  3064               	movlw	100
  2245  02BE  022C               	subwf	begogon3@count_up^(0+128),w
  2246  02BF  1C03               	skipc
  2247  02C0  2AAA               	goto	l2337
  2248                           
  2249                           ;main.c: 329:     RED_LED(0);
  2250  02C1  01A6               	clrf	RED_LED@duty^(0+128)
  2251  02C2  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  2252  02C3  2465               	fcall	_RED_LED
  2253                           
  2254                           ;main.c: 330:     count_down = 100;
  2255  02C4  3064               	movlw	100
  2256  02C5  0021               	movlb	1	; select bank1
  2257  02C6  00AB               	movwf	begogon3@count_down^(0+128)
  2258                           
  2259                           ;main.c: 331:     for (count_up = 0; count_up < 100; count_up = count_up + 5) {
  2260  02C7  01AC               	clrf	begogon3@count_up^(0+128)
  2261  02C8                     l2359:	
  2262                           
  2263                           ;main.c: 332:         count_down = count_down - 5;
  2264  02C8  30FB               	movlw	251
  2265  02C9  07AB               	addwf	begogon3@count_down^(0+128),f
  2266                           
  2267                           ;main.c: 333:         BLUE_LED(count_down);
  2268  02CA  082B               	movf	begogon3@count_down^(0+128),w
  2269  02CB  00A6               	movwf	BLUE_LED@duty^(0+128)
  2270  02CC  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  2271  02CD  249F               	fcall	_BLUE_LED
  2272                           
  2273                           ;main.c: 334:         GREEN_LED(count_up);
  2274  02CE  0021               	movlb	1	; select bank1
  2275  02CF  082C               	movf	begogon3@count_up^(0+128),w
  2276  02D0  00A6               	movwf	GREEN_LED@duty^(0+128)
  2277  02D1  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  2278  02D2  2482               	fcall	_GREEN_LED
  2279                           
  2280                           ;main.c: 335:         delay_ms(del);
  2281  02D3  0021               	movlb	1	; select bank1
  2282  02D4  082A               	movf	(begogon3@del+1)^(0+128),w
  2283  02D5  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2284  02D6  0829               	movf	begogon3@del^(0+128),w
  2285  02D7  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2286  02D8  24BC               	fcall	_delay_ms
  2287                           
  2288                           ;main.c: 336:     }
  2289  02D9  3005               	movlw	5
  2290  02DA  07AC               	addwf	begogon3@count_up^(0+128),f
  2291  02DB  3064               	movlw	100
  2292  02DC  022C               	subwf	begogon3@count_up^(0+128),w
  2293  02DD  1C03               	skipc
  2294  02DE  2AC8               	goto	l2359
  2295                           
  2296                           ;main.c: 337:     BLUE_LED(0);
  2297  02DF  01A6               	clrf	BLUE_LED@duty^(0+128)
  2298  02E0  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  2299  02E1  249F               	fcall	_BLUE_LED
  2300                           
  2301                           ;main.c: 338:     count_down = 100;
  2302  02E2  3064               	movlw	100
  2303  02E3  0021               	movlb	1	; select bank1
  2304  02E4  00AB               	movwf	begogon3@count_down^(0+128)
  2305                           
  2306                           ;main.c: 339:     for (count_up = 0; count_up < 100; count_up = count_up + 5) {
  2307  02E5  01AC               	clrf	begogon3@count_up^(0+128)
  2308  02E6                     l2381:	
  2309                           
  2310                           ;main.c: 340:         count_down = count_down - 5;
  2311  02E6  30FB               	movlw	251
  2312  02E7  07AB               	addwf	begogon3@count_down^(0+128),f
  2313                           
  2314                           ;main.c: 341:         GREEN_LED(count_down);
  2315  02E8  082B               	movf	begogon3@count_down^(0+128),w
  2316  02E9  00A6               	movwf	GREEN_LED@duty^(0+128)
  2317  02EA  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  2318  02EB  2482               	fcall	_GREEN_LED
  2319                           
  2320                           ;main.c: 342:         RED_LED(count_up);
  2321  02EC  0021               	movlb	1	; select bank1
  2322  02ED  082C               	movf	begogon3@count_up^(0+128),w
  2323  02EE  00A6               	movwf	RED_LED@duty^(0+128)
  2324  02EF  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  2325  02F0  2465               	fcall	_RED_LED
  2326                           
  2327                           ;main.c: 343:         delay_ms(del);
  2328  02F1  0021               	movlb	1	; select bank1
  2329  02F2  082A               	movf	(begogon3@del+1)^(0+128),w
  2330  02F3  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2331  02F4  0829               	movf	begogon3@del^(0+128),w
  2332  02F5  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2333  02F6  24BC               	fcall	_delay_ms
  2334                           
  2335                           ;main.c: 344:     }
  2336  02F7  3005               	movlw	5
  2337  02F8  07AC               	addwf	begogon3@count_up^(0+128),f
  2338  02F9  3064               	movlw	100
  2339  02FA  022C               	subwf	begogon3@count_up^(0+128),w
  2340  02FB  1C03               	skipc
  2341  02FC  2AE6               	goto	l2381
  2342                           
  2343                           ;main.c: 345:     GREEN_LED(0);
  2344  02FD  01A6               	clrf	GREEN_LED@duty^(0+128)
  2345  02FE  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  2346  02FF  2C82               	ljmp	l2079
  2347  0300                     __end_of_begogon3:	
  2348                           
  2349                           	psect	text14
  2350  018F                     __ptext14:	
  2351 ;; *************** function _begogon2 *****************
  2352 ;; Defined at:
  2353 ;;		line 283 in file "main.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  del             2    9[BANK1 ] unsigned short 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  count1          2   11[BANK1 ] unsigned short 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0, pclath, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 1F/1
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2367 ;;      Params:         0       0       2       0
  2368 ;;      Locals:         0       0       2       0
  2369 ;;      Temps:          0       0       0       0
  2370 ;;      Totals:         0       0       4       0
  2371 ;;Total ram usage:        4 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    5
  2374 ;; This function calls:
  2375 ;;		_BLUE_LED
  2376 ;;		_GREEN_LED
  2377 ;;		_RED_LED
  2378 ;;		_delay_ms
  2379 ;; This function is called by:
  2380 ;;		_main
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           
  2385                           ;psect for function _begogon2
  2386  018F                     _begogon2:	
  2387                           
  2388                           ;main.c: 284:     uint16_t count1 = 0;
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in _begogon2: [wreg+status,2+status,0+pclath+cstack]
  2392  018F  01AB               	clrf	begogon2@count1^(0+128)
  2393  0190  01AC               	clrf	(begogon2@count1+1)^(0+128)
  2394                           
  2395                           ;main.c: 285:     for (count1 = 0; count1 < 100; count1 = count1 + 5) {
  2396  0191  01AB               	clrf	begogon2@count1^(0+128)
  2397  0192  01AC               	clrf	(begogon2@count1+1)^(0+128)
  2398  0193                     l2251:	
  2399                           
  2400                           ;main.c: 286:         GREEN_LED(count1);
  2401  0193  082C               	movf	(begogon2@count1+1)^(0+128),w
  2402  0194  00A7               	movwf	(GREEN_LED@duty+1)^(0+128)
  2403  0195  082B               	movf	begogon2@count1^(0+128),w
  2404  0196  00A6               	movwf	GREEN_LED@duty^(0+128)
  2405  0197  2482               	fcall	_GREEN_LED
  2406                           
  2407                           ;main.c: 287:         delay_ms(del);
  2408  0198  0021               	movlb	1	; select bank1
  2409  0199  082A               	movf	(begogon2@del+1)^(0+128),w
  2410  019A  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2411  019B  0829               	movf	begogon2@del^(0+128),w
  2412  019C  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2413  019D  24BC               	fcall	_delay_ms
  2414                           
  2415                           ;main.c: 288:     }
  2416  019E  082B               	movf	begogon2@count1^(0+128),w
  2417  019F  3E05               	addlw	5
  2418  01A0  00AB               	movwf	begogon2@count1^(0+128)
  2419  01A1  3000               	movlw	0
  2420  01A2  3D2C               	addwfc	(begogon2@count1+1)^(0+128),w
  2421  01A3  00AC               	movwf	(begogon2@count1+1)^(0+128)
  2422  01A4  3000               	movlw	0
  2423  01A5  022C               	subwf	(begogon2@count1+1)^(0+128),w
  2424  01A6  3064               	movlw	100
  2425  01A7  1903               	skipnz
  2426  01A8  022B               	subwf	begogon2@count1^(0+128),w
  2427  01A9  1C03               	skipc
  2428  01AA  2993               	goto	l2251
  2429                           
  2430                           ;main.c: 289:     for (count1 = 100; count1 > 0; count1 = count1 - 5) {
  2431  01AB  3064               	movlw	100
  2432  01AC  00AB               	movwf	begogon2@count1^(0+128)
  2433  01AD  01AC               	clrf	(begogon2@count1+1)^(0+128)
  2434  01AE                     l2263:	
  2435                           
  2436                           ;main.c: 290:         GREEN_LED(count1);
  2437  01AE  082C               	movf	(begogon2@count1+1)^(0+128),w
  2438  01AF  00A7               	movwf	(GREEN_LED@duty+1)^(0+128)
  2439  01B0  082B               	movf	begogon2@count1^(0+128),w
  2440  01B1  00A6               	movwf	GREEN_LED@duty^(0+128)
  2441  01B2  2482               	fcall	_GREEN_LED
  2442                           
  2443                           ;main.c: 291:         delay_ms(del);
  2444  01B3  0021               	movlb	1	; select bank1
  2445  01B4  082A               	movf	(begogon2@del+1)^(0+128),w
  2446  01B5  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2447  01B6  0829               	movf	begogon2@del^(0+128),w
  2448  01B7  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2449  01B8  24BC               	fcall	_delay_ms
  2450                           
  2451                           ;main.c: 292:     }
  2452  01B9  082B               	movf	begogon2@count1^(0+128),w
  2453  01BA  3EFB               	addlw	251
  2454  01BB  00AB               	movwf	begogon2@count1^(0+128)
  2455  01BC  30FF               	movlw	255
  2456  01BD  3D2C               	addwfc	(begogon2@count1+1)^(0+128),w
  2457  01BE  00AC               	movwf	(begogon2@count1+1)^(0+128)
  2458  01BF  042B               	iorwf	begogon2@count1^(0+128),w
  2459  01C0  1D03               	btfss	3,2
  2460  01C1  29AE               	goto	l2263
  2461                           
  2462                           ;main.c: 293:     GREEN_LED(0);
  2463  01C2  01A6               	clrf	GREEN_LED@duty^(0+128)
  2464  01C3  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  2465  01C4  2482               	fcall	_GREEN_LED
  2466                           
  2467                           ;main.c: 295:     for (count1 = 0; count1 < 100; count1 = count1 + 5) {
  2468  01C5  0021               	movlb	1	; select bank1
  2469  01C6  01AB               	clrf	begogon2@count1^(0+128)
  2470  01C7  01AC               	clrf	(begogon2@count1+1)^(0+128)
  2471  01C8                     l2277:	
  2472                           
  2473                           ;main.c: 296:         RED_LED(count1);
  2474  01C8  082C               	movf	(begogon2@count1+1)^(0+128),w
  2475  01C9  00A7               	movwf	(RED_LED@duty+1)^(0+128)
  2476  01CA  082B               	movf	begogon2@count1^(0+128),w
  2477  01CB  00A6               	movwf	RED_LED@duty^(0+128)
  2478  01CC  2465               	fcall	_RED_LED
  2479                           
  2480                           ;main.c: 297:         delay_ms(del);
  2481  01CD  0021               	movlb	1	; select bank1
  2482  01CE  082A               	movf	(begogon2@del+1)^(0+128),w
  2483  01CF  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2484  01D0  0829               	movf	begogon2@del^(0+128),w
  2485  01D1  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2486  01D2  24BC               	fcall	_delay_ms
  2487                           
  2488                           ;main.c: 298:     }
  2489  01D3  082B               	movf	begogon2@count1^(0+128),w
  2490  01D4  3E05               	addlw	5
  2491  01D5  00AB               	movwf	begogon2@count1^(0+128)
  2492  01D6  3000               	movlw	0
  2493  01D7  3D2C               	addwfc	(begogon2@count1+1)^(0+128),w
  2494  01D8  00AC               	movwf	(begogon2@count1+1)^(0+128)
  2495  01D9  3000               	movlw	0
  2496  01DA  022C               	subwf	(begogon2@count1+1)^(0+128),w
  2497  01DB  3064               	movlw	100
  2498  01DC  1903               	skipnz
  2499  01DD  022B               	subwf	begogon2@count1^(0+128),w
  2500  01DE  1C03               	skipc
  2501  01DF  29C8               	goto	l2277
  2502                           
  2503                           ;main.c: 299:     for (count1 = 100; count1 > 0; count1 = count1 - 5) {
  2504  01E0  3064               	movlw	100
  2505  01E1  00AB               	movwf	begogon2@count1^(0+128)
  2506  01E2  01AC               	clrf	(begogon2@count1+1)^(0+128)
  2507  01E3                     l2289:	
  2508                           
  2509                           ;main.c: 300:         RED_LED(count1);
  2510  01E3  082C               	movf	(begogon2@count1+1)^(0+128),w
  2511  01E4  00A7               	movwf	(RED_LED@duty+1)^(0+128)
  2512  01E5  082B               	movf	begogon2@count1^(0+128),w
  2513  01E6  00A6               	movwf	RED_LED@duty^(0+128)
  2514  01E7  2465               	fcall	_RED_LED
  2515                           
  2516                           ;main.c: 301:         delay_ms(del);
  2517  01E8  0021               	movlb	1	; select bank1
  2518  01E9  082A               	movf	(begogon2@del+1)^(0+128),w
  2519  01EA  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2520  01EB  0829               	movf	begogon2@del^(0+128),w
  2521  01EC  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2522  01ED  24BC               	fcall	_delay_ms
  2523                           
  2524                           ;main.c: 302:     }
  2525  01EE  082B               	movf	begogon2@count1^(0+128),w
  2526  01EF  3EFB               	addlw	251
  2527  01F0  00AB               	movwf	begogon2@count1^(0+128)
  2528  01F1  30FF               	movlw	255
  2529  01F2  3D2C               	addwfc	(begogon2@count1+1)^(0+128),w
  2530  01F3  00AC               	movwf	(begogon2@count1+1)^(0+128)
  2531  01F4  042B               	iorwf	begogon2@count1^(0+128),w
  2532  01F5  1D03               	btfss	3,2
  2533  01F6  29E3               	goto	l2289
  2534                           
  2535                           ;main.c: 303:     RED_LED(0);
  2536  01F7  01A6               	clrf	RED_LED@duty^(0+128)
  2537  01F8  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  2538  01F9  2465               	fcall	_RED_LED
  2539                           
  2540                           ;main.c: 305:     for (count1 = 0; count1 < 100; count1 = count1 + 5) {
  2541  01FA  0021               	movlb	1	; select bank1
  2542  01FB  01AB               	clrf	begogon2@count1^(0+128)
  2543  01FC  01AC               	clrf	(begogon2@count1+1)^(0+128)
  2544  01FD                     l2303:	
  2545                           
  2546                           ;main.c: 306:         BLUE_LED(count1);
  2547  01FD  082C               	movf	(begogon2@count1+1)^(0+128),w
  2548  01FE  00A7               	movwf	(BLUE_LED@duty+1)^(0+128)
  2549  01FF  082B               	movf	begogon2@count1^(0+128),w
  2550  0200  00A6               	movwf	BLUE_LED@duty^(0+128)
  2551  0201  249F               	fcall	_BLUE_LED
  2552                           
  2553                           ;main.c: 307:         delay_ms(del);
  2554  0202  0021               	movlb	1	; select bank1
  2555  0203  082A               	movf	(begogon2@del+1)^(0+128),w
  2556  0204  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2557  0205  0829               	movf	begogon2@del^(0+128),w
  2558  0206  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2559  0207  24BC               	fcall	_delay_ms
  2560                           
  2561                           ;main.c: 308:     }
  2562  0208  082B               	movf	begogon2@count1^(0+128),w
  2563  0209  3E05               	addlw	5
  2564  020A  00AB               	movwf	begogon2@count1^(0+128)
  2565  020B  3000               	movlw	0
  2566  020C  3D2C               	addwfc	(begogon2@count1+1)^(0+128),w
  2567  020D  00AC               	movwf	(begogon2@count1+1)^(0+128)
  2568  020E  3000               	movlw	0
  2569  020F  022C               	subwf	(begogon2@count1+1)^(0+128),w
  2570  0210  3064               	movlw	100
  2571  0211  1903               	skipnz
  2572  0212  022B               	subwf	begogon2@count1^(0+128),w
  2573  0213  1C03               	skipc
  2574  0214  29FD               	goto	l2303
  2575                           
  2576                           ;main.c: 309:     for (count1 = 100; count1 > 0; count1 = count1 - 5) {
  2577  0215  3064               	movlw	100
  2578  0216  00AB               	movwf	begogon2@count1^(0+128)
  2579  0217  01AC               	clrf	(begogon2@count1+1)^(0+128)
  2580  0218                     l2315:	
  2581                           
  2582                           ;main.c: 310:         BLUE_LED(count1);
  2583  0218  082C               	movf	(begogon2@count1+1)^(0+128),w
  2584  0219  00A7               	movwf	(BLUE_LED@duty+1)^(0+128)
  2585  021A  082B               	movf	begogon2@count1^(0+128),w
  2586  021B  00A6               	movwf	BLUE_LED@duty^(0+128)
  2587  021C  249F               	fcall	_BLUE_LED
  2588                           
  2589                           ;main.c: 311:         delay_ms(del);
  2590  021D  0021               	movlb	1	; select bank1
  2591  021E  082A               	movf	(begogon2@del+1)^(0+128),w
  2592  021F  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2593  0220  0829               	movf	begogon2@del^(0+128),w
  2594  0221  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2595  0222  24BC               	fcall	_delay_ms
  2596                           
  2597                           ;main.c: 312:     }
  2598  0223  082B               	movf	begogon2@count1^(0+128),w
  2599  0224  3EFB               	addlw	251
  2600  0225  00AB               	movwf	begogon2@count1^(0+128)
  2601  0226  30FF               	movlw	255
  2602  0227  3D2C               	addwfc	(begogon2@count1+1)^(0+128),w
  2603  0228  00AC               	movwf	(begogon2@count1+1)^(0+128)
  2604  0229  042B               	iorwf	begogon2@count1^(0+128),w
  2605  022A  1D03               	btfss	3,2
  2606  022B  2A18               	goto	l2315
  2607                           
  2608                           ;main.c: 313:     BLUE_LED(0);
  2609  022C  01A6               	clrf	BLUE_LED@duty^(0+128)
  2610  022D  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  2611  022E  2C9F               	ljmp	l2087
  2612  022F                     __end_of_begogon2:	
  2613                           
  2614                           	psect	text15
  2615  034E                     __ptext15:	
  2616 ;; *************** function _begogon1 *****************
  2617 ;; Defined at:
  2618 ;;		line 265 in file "main.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  del             2    9[BANK1 ] unsigned short 
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0, pclath, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 1F/1
  2629 ;;		On exit  : 1F/1
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2632 ;;      Params:         0       0       2       0
  2633 ;;      Locals:         0       0       0       0
  2634 ;;      Temps:          0       0       0       0
  2635 ;;      Totals:         0       0       2       0
  2636 ;;Total ram usage:        2 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    5
  2639 ;; This function calls:
  2640 ;;		_BLUE_LED
  2641 ;;		_GREEN_LED
  2642 ;;		_RED_LED
  2643 ;;		_delay_ms
  2644 ;; This function is called by:
  2645 ;;		_main
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           
  2650                           ;psect for function _begogon1
  2651  034E                     _begogon1:	
  2652                           
  2653                           ;main.c: 266:     GREEN_LED(100);
  2654                           
  2655                           ;incstack = 0
  2656                           ; Regs used in _begogon1: [wreg+status,2+status,0+pclath+cstack]
  2657  034E  3064               	movlw	100
  2658  034F  00A6               	movwf	GREEN_LED@duty^(0+128)
  2659  0350  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  2660  0351  2482               	fcall	_GREEN_LED
  2661                           
  2662                           ;main.c: 267:     RED_LED(0);
  2663  0352  0021               	movlb	1	; select bank1
  2664  0353  01A6               	clrf	RED_LED@duty^(0+128)
  2665  0354  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  2666  0355  2465               	fcall	_RED_LED
  2667                           
  2668                           ;main.c: 268:     BLUE_LED(0);
  2669  0356  0021               	movlb	1	; select bank1
  2670  0357  01A6               	clrf	BLUE_LED@duty^(0+128)
  2671  0358  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  2672  0359  249F               	fcall	_BLUE_LED
  2673                           
  2674                           ;main.c: 269:     delay_ms(del);
  2675  035A  0021               	movlb	1	; select bank1
  2676  035B  082A               	movf	(begogon1@del+1)^(0+128),w
  2677  035C  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2678  035D  0829               	movf	begogon1@del^(0+128),w
  2679  035E  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2680  035F  24BC               	fcall	_delay_ms
  2681                           
  2682                           ;main.c: 270:     GREEN_LED(0);
  2683  0360  01A6               	clrf	GREEN_LED@duty^(0+128)
  2684  0361  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  2685  0362  2482               	fcall	_GREEN_LED
  2686                           
  2687                           ;main.c: 271:     RED_LED(100);
  2688  0363  3064               	movlw	100
  2689  0364  0021               	movlb	1	; select bank1
  2690  0365  00A6               	movwf	RED_LED@duty^(0+128)
  2691  0366  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  2692  0367  2465               	fcall	_RED_LED
  2693                           
  2694                           ;main.c: 272:     BLUE_LED(0);
  2695  0368  0021               	movlb	1	; select bank1
  2696  0369  01A6               	clrf	BLUE_LED@duty^(0+128)
  2697  036A  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  2698  036B  249F               	fcall	_BLUE_LED
  2699                           
  2700                           ;main.c: 273:     delay_ms(del);
  2701  036C  0021               	movlb	1	; select bank1
  2702  036D  082A               	movf	(begogon1@del+1)^(0+128),w
  2703  036E  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2704  036F  0829               	movf	begogon1@del^(0+128),w
  2705  0370  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2706  0371  24BC               	fcall	_delay_ms
  2707                           
  2708                           ;main.c: 274:     GREEN_LED(0);
  2709  0372  01A6               	clrf	GREEN_LED@duty^(0+128)
  2710  0373  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  2711  0374  2482               	fcall	_GREEN_LED
  2712                           
  2713                           ;main.c: 275:     RED_LED(0);
  2714  0375  0021               	movlb	1	; select bank1
  2715  0376  01A6               	clrf	RED_LED@duty^(0+128)
  2716  0377  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  2717  0378  2465               	fcall	_RED_LED
  2718                           
  2719                           ;main.c: 276:     BLUE_LED(100);
  2720  0379  3064               	movlw	100
  2721  037A  0021               	movlb	1	; select bank1
  2722  037B  00A6               	movwf	BLUE_LED@duty^(0+128)
  2723  037C  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  2724  037D  249F               	fcall	_BLUE_LED
  2725                           
  2726                           ;main.c: 277:     delay_ms(del);
  2727  037E  0021               	movlb	1	; select bank1
  2728  037F  082A               	movf	(begogon1@del+1)^(0+128),w
  2729  0380  00A1               	movwf	(delay_ms@milliseconds+1)^(0+128)
  2730  0381  0829               	movf	begogon1@del^(0+128),w
  2731  0382  00A0               	movwf	delay_ms@milliseconds^(0+128)
  2732  0383  2CBC               	ljmp	l2063
  2733  0384                     __end_of_begogon1:	
  2734                           
  2735                           	psect	text16
  2736  04BC                     __ptext16:	
  2737 ;; *************** function _delay_ms *****************
  2738 ;; Defined at:
  2739 ;;		line 33 in file "main.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  milliseconds    2    0[BANK1 ] unsigned short 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0
  2748 ;; Tracked objects:
  2749 ;;		On entry : 1F/1
  2750 ;;		On exit  : 1F/1
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2753 ;;      Params:         0       0       2       0
  2754 ;;      Locals:         0       0       0       0
  2755 ;;      Temps:          0       0       1       0
  2756 ;;      Totals:         0       0       3       0
  2757 ;;Total ram usage:        3 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    3
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_miganie
  2764 ;;		_begogon1
  2765 ;;		_begogon2
  2766 ;;		_begogon3
  2767 ;;		_begogonGB
  2768 ;;		_begogonBR
  2769 ;;		_begogonGR
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           
  2774                           ;psect for function _delay_ms
  2775  04BC                     _delay_ms:	
  2776  04BC                     l2063:	
  2777                           ;incstack = 0
  2778                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  2779                           
  2780  04BC                     l2069:	
  2781                           ;main.c: 34:     while (milliseconds > 0) {
  2782                           
  2783                           
  2784                           ;main.c: 34:     while (milliseconds > 0) {
  2785  04BC  0820               	movf	delay_ms@milliseconds^(0+128),w
  2786  04BD  0421               	iorwf	(delay_ms@milliseconds+1)^(0+128),w
  2787  04BE  1903               	btfsc	3,2
  2788  04BF  0008               	return
  2789                           
  2790                           ;main.c: 35:         if (break_del == 0) {
  2791  04C0  187C               	btfsc	_break_del/(0+8),_break_del& (0+7)
  2792  04C1  2CD1               	goto	l2067
  2793                           
  2794                           ;main.c: 36:             _delay((unsigned long)((1)*(32000000/4000.0)));
  2795  04C2  300B               	movlw	11
  2796  04C3  0021               	movlb	1	; select bank1
  2797  04C4  00A2               	movwf	??_delay_ms^(0+128)
  2798  04C5  3062               	movlw	98
  2799  04C6                     u947:	
  2800  04C6  0B89               	decfsz	9,f
  2801  04C7  2CC6               	goto	u947
  2802  04C8  0BA2               	decfsz	??_delay_ms^(0+128),f
  2803  04C9  2CC6               	goto	u947
  2804  04CA  0000               	nop
  2805                           
  2806                           ;main.c: 37:             milliseconds--;
  2807  04CB  3001               	movlw	1
  2808  04CC  0021               	movlb	1	; select bank1
  2809  04CD  02A0               	subwf	delay_ms@milliseconds^(0+128),f
  2810  04CE  3000               	movlw	0
  2811  04CF  3BA1               	subwfb	(delay_ms@milliseconds+1)^(0+128),f
  2812                           
  2813                           ;main.c: 38:         } else milliseconds = 0;
  2814  04D0  2CBC               	goto	l2069
  2815  04D1                     l2067:	
  2816  04D1  01A0               	clrf	delay_ms@milliseconds^(0+128)
  2817  04D2  01A1               	clrf	(delay_ms@milliseconds+1)^(0+128)
  2818  04D3  2CBC               	goto	l2069
  2819  04D4                     __end_of_delay_ms:	
  2820                           
  2821                           	psect	text17
  2822  05A4                     __ptext17:	
  2823 ;; *************** function _adc_setup *****************
  2824 ;; Defined at:
  2825 ;;		line 226 in file "main.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;		None
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;		None
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg
  2834 ;; Tracked objects:
  2835 ;;		On entry : B1F/1B
  2836 ;;		On exit  : B1F/1
  2837 ;;		Unchanged: B00/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2839 ;;      Params:         0       0       0       0
  2840 ;;      Locals:         0       0       0       0
  2841 ;;      Temps:          0       0       0       0
  2842 ;;      Totals:         0       0       0       0
  2843 ;;Total ram usage:        0 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    3
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_main
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           
  2854                           ;psect for function _adc_setup
  2855  05A4                     _adc_setup:	
  2856                           
  2857                           ;main.c: 228:     ADCON0 = 0b00001101;
  2858                           
  2859                           ;incstack = 0
  2860                           ; Regs used in _adc_setup: [wreg]
  2861  05A4  300D               	movlw	13
  2862  05A5  0021               	movlb	1	; select bank1
  2863  05A6  009D               	movwf	29	;volatile
  2864                           
  2865                           ;main.c: 229:     ADCON1 = 0b11100000;
  2866  05A7  30E0               	movlw	224
  2867  05A8  009E               	movwf	30	;volatile
  2868  05A9  0008               	return
  2869  05AA                     __end_of_adc_setup:	
  2870                           
  2871                           	psect	text18
  2872  0562                     __ptext18:	
  2873 ;; *************** function _RGB_ON *****************
  2874 ;; Defined at:
  2875 ;;		line 383 in file "main.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  yarc            1    wreg     unsigned char 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  yarc            1    9[BANK1 ] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0, pclath, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 1F/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2889 ;;      Params:         0       0       0       0
  2890 ;;      Locals:         0       0       1       0
  2891 ;;      Temps:          0       0       0       0
  2892 ;;      Totals:         0       0       1       0
  2893 ;;Total ram usage:        1 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    5
  2896 ;; This function calls:
  2897 ;;		_BLUE_LED
  2898 ;;		_GREEN_LED
  2899 ;;		_RED_LED
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           
  2906                           ;psect for function _RGB_ON
  2907  0562                     _RGB_ON:	
  2908                           
  2909                           ;incstack = 0
  2910                           ; Regs used in _RGB_ON: [wreg+status,2+status,0+pclath+cstack]
  2911                           ;RGB_ON@yarc stored from wreg
  2912  0562  0021               	movlb	1	; select bank1
  2913  0563  00A9               	movwf	RGB_ON@yarc^(0+128)
  2914                           
  2915                           ;main.c: 384:     BLUE_LED(yarc);
  2916  0564  00A6               	movwf	BLUE_LED@duty^(0+128)
  2917  0565  01A7               	clrf	(BLUE_LED@duty+1)^(0+128)
  2918  0566  249F               	fcall	_BLUE_LED
  2919                           
  2920                           ;main.c: 385:     RED_LED(yarc);
  2921  0567  0021               	movlb	1	; select bank1
  2922  0568  0829               	movf	RGB_ON@yarc^(0+128),w
  2923  0569  00A6               	movwf	RED_LED@duty^(0+128)
  2924  056A  01A7               	clrf	(RED_LED@duty+1)^(0+128)
  2925  056B  2465               	fcall	_RED_LED
  2926                           
  2927                           ;main.c: 386:     GREEN_LED(yarc);
  2928  056C  0021               	movlb	1	; select bank1
  2929  056D  0829               	movf	RGB_ON@yarc^(0+128),w
  2930  056E  00A6               	movwf	GREEN_LED@duty^(0+128)
  2931  056F  01A7               	clrf	(GREEN_LED@duty+1)^(0+128)
  2932  0570  2C82               	ljmp	l2079
  2933  0571                     __end_of_RGB_ON:	
  2934                           
  2935                           	psect	text19
  2936  0465                     __ptext19:	
  2937 ;; *************** function _RED_LED *****************
  2938 ;; Defined at:
  2939 ;;		line 179 in file "main.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  duty            2    6[BANK1 ] unsigned short 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0, pclath, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 1F/1
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2953 ;;      Params:         0       0       2       0
  2954 ;;      Locals:         0       0       0       0
  2955 ;;      Temps:          0       0       1       0
  2956 ;;      Totals:         0       0       3       0
  2957 ;;Total ram usage:        3 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    4
  2960 ;; This function calls:
  2961 ;;		___wmul
  2962 ;; This function is called by:
  2963 ;;		_miganie
  2964 ;;		_begogon1
  2965 ;;		_begogon2
  2966 ;;		_begogon3
  2967 ;;		_begogonGB
  2968 ;;		_begogonBR
  2969 ;;		_begogonGR
  2970 ;;		_RGB_ON
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           
  2976                           ;psect for function _RED_LED
  2977  0465                     _RED_LED:	
  2978                           
  2979                           ;main.c: 180:     PWM1CONbits.EN = 0;
  2980                           
  2981                           ;incstack = 0
  2982                           ; Regs used in _RED_LED: [wreg+status,2+status,0+pclath+cstack]
  2983  0465  003B               	movlb	27	; select bank27
  2984  0466  139B               	bcf	27,7	;volatile
  2985                           
  2986                           ;main.c: 181:     PWM1DC = duty * 10;
  2987  0467  0021               	movlb	1	; select bank1
  2988  0468  0827               	movf	(RED_LED@duty+1)^(0+128),w
  2989  0469  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  2990  046A  0826               	movf	RED_LED@duty^(0+128),w
  2991  046B  00A0               	movwf	___wmul@multiplier^(0+128)
  2992  046C  300A               	movlw	10
  2993  046D  00A2               	movwf	___wmul@multiplicand^(0+128)
  2994  046E  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  2995  046F  252A               	fcall	___wmul
  2996  0470  0821               	movf	(?___wmul+1)^(0+128),w
  2997  0471  003B               	movlb	27	; select bank27
  2998  0472  0094               	movwf	20	;volatile
  2999  0473  0021               	movlb	1	; select bank1
  3000  0474  0820               	movf	?___wmul^(0+128),w
  3001  0475  003B               	movlb	27	; select bank27
  3002  0476  0093               	movwf	19	;volatile
  3003                           
  3004                           ;main.c: 183:     PWM1CONbits.EN = 1;
  3005  0477  179B               	bsf	27,7	;volatile
  3006                           
  3007                           ;main.c: 184:     _delay((unsigned long)((1)*(32000000/4000.0)));
  3008  0478  300B               	movlw	11
  3009  0479  0021               	movlb	1	; select bank1
  3010  047A  00A8               	movwf	??_RED_LED^(0+128)
  3011  047B  3062               	movlw	98
  3012  047C                     u957:	
  3013  047C  0B89               	decfsz	9,f
  3014  047D  2C7C               	goto	u957
  3015  047E  0BA8               	decfsz	??_RED_LED^(0+128),f
  3016  047F  2C7C               	goto	u957
  3017  0480  0000               	nop
  3018  0481  0008               	return
  3019  0482                     __end_of_RED_LED:	
  3020                           
  3021                           	psect	text20
  3022  0482                     __ptext20:	
  3023 ;; *************** function _GREEN_LED *****************
  3024 ;; Defined at:
  3025 ;;		line 187 in file "main.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  duty            2    6[BANK1 ] unsigned short 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2, status,0, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 1F/1
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3039 ;;      Params:         0       0       2       0
  3040 ;;      Locals:         0       0       0       0
  3041 ;;      Temps:          0       0       1       0
  3042 ;;      Totals:         0       0       3       0
  3043 ;;Total ram usage:        3 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    4
  3046 ;; This function calls:
  3047 ;;		___wmul
  3048 ;; This function is called by:
  3049 ;;		_miganie
  3050 ;;		_begogon1
  3051 ;;		_begogon2
  3052 ;;		_begogon3
  3053 ;;		_begogonGB
  3054 ;;		_begogonBR
  3055 ;;		_begogonGR
  3056 ;;		_RGB_ON
  3057 ;;		_main
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           
  3062                           ;psect for function _GREEN_LED
  3063  0482                     _GREEN_LED:	
  3064  0482                     l2079:	
  3065                           ;incstack = 0
  3066                           ; Regs used in _GREEN_LED: [wreg+status,2+status,0+pclath+cstack]
  3067                           
  3068                           
  3069                           ;main.c: 188:     PWM2CONbits.EN = 0;
  3070  0482  003B               	movlb	27	; select bank27
  3071  0483  13AB               	bcf	43,7	;volatile
  3072                           
  3073                           ;main.c: 189:     PWM2DC = duty * 10;
  3074  0484  0021               	movlb	1	; select bank1
  3075  0485  0827               	movf	(GREEN_LED@duty+1)^(0+128),w
  3076  0486  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  3077  0487  0826               	movf	GREEN_LED@duty^(0+128),w
  3078  0488  00A0               	movwf	___wmul@multiplier^(0+128)
  3079  0489  300A               	movlw	10
  3080  048A  00A2               	movwf	___wmul@multiplicand^(0+128)
  3081  048B  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  3082  048C  252A               	fcall	___wmul
  3083  048D  0821               	movf	(?___wmul+1)^(0+128),w
  3084  048E  003B               	movlb	27	; select bank27
  3085  048F  00A4               	movwf	36	;volatile
  3086  0490  0021               	movlb	1	; select bank1
  3087  0491  0820               	movf	?___wmul^(0+128),w
  3088  0492  003B               	movlb	27	; select bank27
  3089  0493  00A3               	movwf	35	;volatile
  3090                           
  3091                           ;main.c: 191:     PWM2CONbits.EN = 1;
  3092  0494  17AB               	bsf	43,7	;volatile
  3093                           
  3094                           ;main.c: 192:     _delay((unsigned long)((1)*(32000000/4000.0)));
  3095  0495  300B               	movlw	11
  3096  0496  0021               	movlb	1	; select bank1
  3097  0497  00A8               	movwf	??_GREEN_LED^(0+128)
  3098  0498  3062               	movlw	98
  3099  0499                     u967:	
  3100  0499  0B89               	decfsz	9,f
  3101  049A  2C99               	goto	u967
  3102  049B  0BA8               	decfsz	??_GREEN_LED^(0+128),f
  3103  049C  2C99               	goto	u967
  3104  049D  0000               	nop
  3105  049E  0008               	return
  3106  049F                     __end_of_GREEN_LED:	
  3107                           
  3108                           	psect	text21
  3109  049F                     __ptext21:	
  3110 ;; *************** function _BLUE_LED *****************
  3111 ;; Defined at:
  3112 ;;		line 195 in file "main.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  duty            2    6[BANK1 ] unsigned short 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0, pclath, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 1F/1
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3126 ;;      Params:         0       0       2       0
  3127 ;;      Locals:         0       0       0       0
  3128 ;;      Temps:          0       0       1       0
  3129 ;;      Totals:         0       0       3       0
  3130 ;;Total ram usage:        3 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    4
  3133 ;; This function calls:
  3134 ;;		___wmul
  3135 ;; This function is called by:
  3136 ;;		_miganie
  3137 ;;		_begogon1
  3138 ;;		_begogon2
  3139 ;;		_begogon3
  3140 ;;		_begogonGB
  3141 ;;		_begogonBR
  3142 ;;		_begogonGR
  3143 ;;		_RGB_ON
  3144 ;;		_main
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           
  3149                           ;psect for function _BLUE_LED
  3150  049F                     _BLUE_LED:	
  3151  049F                     l2087:	
  3152                           ;incstack = 0
  3153                           ; Regs used in _BLUE_LED: [wreg+status,2+status,0+pclath+cstack]
  3154                           
  3155                           
  3156                           ;main.c: 196:     PWM3CONbits.EN = 0;
  3157  049F  003B               	movlb	27	; select bank27
  3158  04A0  13BB               	bcf	59,7	;volatile
  3159                           
  3160                           ;main.c: 197:     PWM3DC = duty * 10;
  3161  04A1  0021               	movlb	1	; select bank1
  3162  04A2  0827               	movf	(BLUE_LED@duty+1)^(0+128),w
  3163  04A3  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  3164  04A4  0826               	movf	BLUE_LED@duty^(0+128),w
  3165  04A5  00A0               	movwf	___wmul@multiplier^(0+128)
  3166  04A6  300A               	movlw	10
  3167  04A7  00A2               	movwf	___wmul@multiplicand^(0+128)
  3168  04A8  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  3169  04A9  252A               	fcall	___wmul
  3170  04AA  0821               	movf	(?___wmul+1)^(0+128),w
  3171  04AB  003B               	movlb	27	; select bank27
  3172  04AC  00B4               	movwf	52	;volatile
  3173  04AD  0021               	movlb	1	; select bank1
  3174  04AE  0820               	movf	?___wmul^(0+128),w
  3175  04AF  003B               	movlb	27	; select bank27
  3176  04B0  00B3               	movwf	51	;volatile
  3177                           
  3178                           ;main.c: 199:     PWM3CONbits.EN = 1;
  3179  04B1  17BB               	bsf	59,7	;volatile
  3180                           
  3181                           ;main.c: 200:     _delay((unsigned long)((1)*(32000000/4000.0)));
  3182  04B2  300B               	movlw	11
  3183  04B3  0021               	movlb	1	; select bank1
  3184  04B4  00A8               	movwf	??_BLUE_LED^(0+128)
  3185  04B5  3062               	movlw	98
  3186  04B6                     u977:	
  3187  04B6  0B89               	decfsz	9,f
  3188  04B7  2CB6               	goto	u977
  3189  04B8  0BA8               	decfsz	??_BLUE_LED^(0+128),f
  3190  04B9  2CB6               	goto	u977
  3191  04BA  0000               	nop
  3192  04BB  0008               	return
  3193  04BC                     __end_of_BLUE_LED:	
  3194                           
  3195                           	psect	text22
  3196  052A                     __ptext22:	
  3197 ;; *************** function ___wmul *****************
  3198 ;; Defined at:
  3199 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  multiplier      2    0[BANK1 ] unsigned int 
  3202 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  product         2    4[BANK1 ] unsigned int 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  2    0[BANK1 ] unsigned int 
  3207 ;; Registers used:
  3208 ;;		wreg, status,2, status,0
  3209 ;; Tracked objects:
  3210 ;;		On entry : 1F/1
  3211 ;;		On exit  : 1F/1
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3214 ;;      Params:         0       0       4       0
  3215 ;;      Locals:         0       0       2       0
  3216 ;;      Temps:          0       0       0       0
  3217 ;;      Totals:         0       0       6       0
  3218 ;;Total ram usage:        6 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; Hardware stack levels required when called:    3
  3221 ;; This function calls:
  3222 ;;		Nothing
  3223 ;; This function is called by:
  3224 ;;		_RED_LED
  3225 ;;		_GREEN_LED
  3226 ;;		_BLUE_LED
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           
  3231                           ;psect for function ___wmul
  3232  052A                     ___wmul:	
  3233                           
  3234                           ;incstack = 0
  3235                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3236  052A  01A4               	clrf	___wmul@product^(0+128)
  3237  052B  01A5               	clrf	(___wmul@product+1)^(0+128)
  3238  052C                     l2049:	
  3239  052C  1C20               	btfss	___wmul@multiplier^(0+128),0
  3240  052D  2D32               	goto	l2053
  3241  052E  0822               	movf	___wmul@multiplicand^(0+128),w
  3242  052F  07A4               	addwf	___wmul@product^(0+128),f
  3243  0530  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  3244  0531  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  3245  0532                     l2053:	
  3246  0532  35A2               	lslf	___wmul@multiplicand^(0+128),f
  3247  0533  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  3248  0534  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  3249  0535  0CA0               	rrf	___wmul@multiplier^(0+128),f
  3250  0536  0820               	movf	___wmul@multiplier^(0+128),w
  3251  0537  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
  3252  0538  1D03               	btfss	3,2
  3253  0539  2D2C               	goto	l2049
  3254  053A  0825               	movf	(___wmul@product+1)^(0+128),w
  3255  053B  00A1               	movwf	(?___wmul+1)^(0+128)
  3256  053C  0824               	movf	___wmul@product^(0+128),w
  3257  053D  00A0               	movwf	?___wmul^(0+128)
  3258  053E  0008               	return
  3259  053F                     __end_of___wmul:	
  3260                           
  3261                           	psect	intentry
  3262  0004                     __pintentry:	
  3263 ;; *************** function _ISR *****************
  3264 ;; Defined at:
  3265 ;;		line 453 in file "main.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;		None
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, status,0, pclath, cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 1F/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3279 ;;      Params:         0       0       0       0
  3280 ;;      Locals:         0       0       0       0
  3281 ;;      Temps:          0       0       0       0
  3282 ;;      Totals:         0       0       0       0
  3283 ;;Total ram usage:        0 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    2
  3286 ;; This function calls:
  3287 ;;		___lwdiv
  3288 ;;		_adr_read
  3289 ;;		_map
  3290 ;; This function is called by:
  3291 ;;		Interrupt level 1
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295  0004                     _ISR:	
  3296                           
  3297                           ;incstack = 0
  3298  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3299                           
  3300                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  3301  0005  3180               	pagesel	$
  3302                           
  3303                           ;main.c: 455:     if (T0IF) {
  3304  0006  1D0B               	btfss	11,2	;volatile
  3305  0007  280F               	goto	i1l1951
  3306                           
  3307                           ;main.c: 456:         millis_count++;
  3308  0008  0020               	movlb	0	; select bank0
  3309  0009  0AC8               	incf	_millis_count,f
  3310  000A  1903               	skipnz
  3311  000B  0AC9               	incf	_millis_count+1,f
  3312                           
  3313                           ;main.c: 457:         TMR0 = 5;
  3314  000C  3005               	movlw	5
  3315  000D  0095               	movwf	21	;volatile
  3316                           
  3317                           ;main.c: 458:         T0IF = 0;
  3318  000E  110B               	bcf	11,2	;volatile
  3319  000F                     i1l1951:	
  3320                           
  3321                           ;main.c: 461:     if (IOCAFbits.IOCAF5) {
  3322  000F  0027               	movlb	7	; select bank7
  3323  0010  1E93               	btfss	19,5	;volatile
  3324  0011  2815               	goto	i1l252
  3325                           
  3326                           ;main.c: 462:         btn_ok = 1;
  3327  0012  14FC               	bsf	_btn_ok/(0+8),_btn_ok& (0+7)
  3328                           
  3329                           ;main.c: 463:         break_del = 1;
  3330  0013  147C               	bsf	_break_del/(0+8),_break_del& (0+7)
  3331                           
  3332                           ;main.c: 465:         IOCAFbits.IOCAF5 = 0;
  3333  0014  1293               	bcf	19,5	;volatile
  3334  0015                     i1l252:	
  3335                           ;main.c: 466:     }
  3336                           
  3337                           
  3338                           ;main.c: 468:     if (TMR1IF) {
  3339  0015  0020               	movlb	0	; select bank0
  3340  0016  1C11               	btfss	17,0	;volatile
  3341  0017  2888               	goto	i1l1983
  3342                           
  3343                           ;main.c: 469:         if (tim1_cnt > 5) {
  3344  0018  3006               	movlw	6
  3345  0019  0252               	subwf	_tim1_cnt,w
  3346  001A  1C03               	skipc
  3347  001B  2886               	goto	i1l1979
  3348                           
  3349                           ;main.c: 470:             result = adr_read();
  3350  001C  253F               	fcall	_adr_read
  3351  001D  0871               	movf	?_adr_read+1,w
  3352  001E  0020               	movlb	0	; select bank0
  3353  001F  00D1               	movwf	_result+1
  3354  0020  0870               	movf	?_adr_read,w
  3355  0021  00D0               	movwf	_result
  3356                           
  3357                           ;main.c: 471:             result = result/10;
  3358  0022  300A               	movlw	10
  3359  0023  00F0               	movwf	___lwdiv@divisor
  3360  0024  01F1               	clrf	___lwdiv@divisor+1
  3361  0025  0851               	movf	_result+1,w
  3362  0026  00F3               	movwf	___lwdiv@dividend+1
  3363  0027  0850               	movf	_result,w
  3364  0028  00F2               	movwf	___lwdiv@dividend
  3365  0029  2440               	fcall	___lwdiv
  3366  002A  0871               	movf	?___lwdiv+1,w
  3367  002B  00D1               	movwf	_result+1
  3368  002C  0870               	movf	?___lwdiv,w
  3369  002D  00D0               	movwf	_result
  3370                           
  3371                           ;main.c: 472:             brightness = result;
  3372  002E  0851               	movf	_result+1,w
  3373  002F  00CF               	movwf	_brightness+1
  3374  0030  0850               	movf	_result,w
  3375  0031  00CE               	movwf	_brightness
  3376                           
  3377                           ;main.c: 473:             pause = result;
  3378  0032  0851               	movf	_result+1,w
  3379  0033  00CD               	movwf	_pause+1
  3380  0034  0850               	movf	_result,w
  3381  0035  00CC               	movwf	_pause
  3382                           
  3383                           ;main.c: 474:             brightness = map(brightness, 0, 102, 1, 100);
  3384  0036  084E               	movf	_brightness,w
  3385  0037  00AE               	movwf	map@x
  3386  0038  084F               	movf	_brightness+1,w
  3387  0039  00AF               	movwf	map@x+1
  3388  003A  3066               	movlw	102
  3389  003B  01B0               	clrf	map@x+2
  3390  003C  01B1               	clrf	map@x+3
  3391  003D  01B2               	clrf	map@in_min
  3392  003E  01B3               	clrf	map@in_min+1
  3393  003F  01B4               	clrf	map@in_min+2
  3394  0040  01B5               	clrf	map@in_min+3
  3395  0041  00B6               	movwf	map@in_max
  3396  0042  3064               	movlw	100
  3397  0043  01B7               	clrf	map@in_max+1
  3398  0044  01B8               	clrf	map@in_max+2
  3399  0045  01B9               	clrf	map@in_max+3
  3400  0046  01BA               	clrf	map@out_min
  3401  0047  0ABA               	incf	map@out_min,f
  3402  0048  01BB               	clrf	map@out_min+1
  3403  0049  01BC               	clrf	map@out_min+2
  3404  004A  01BD               	clrf	map@out_min+3
  3405  004B  00BE               	movwf	map@out_max
  3406  004C  01BF               	clrf	map@out_max+1
  3407  004D  01C0               	clrf	map@out_max+2
  3408  004E  01C1               	clrf	map@out_max+3
  3409  004F  2300               	fcall	_map
  3410  0050  082F               	movf	?_map+1,w
  3411  0051  00CF               	movwf	_brightness+1
  3412  0052  082E               	movf	?_map,w
  3413  0053  00CE               	movwf	_brightness
  3414                           
  3415                           ;main.c: 475:             pause = map(pause, 0, 102, 10, 500);
  3416  0054  084C               	movf	_pause,w
  3417  0055  00AE               	movwf	map@x
  3418  0056  084D               	movf	_pause+1,w
  3419  0057  00AF               	movwf	map@x+1
  3420  0058  3066               	movlw	102
  3421  0059  01B0               	clrf	map@x+2
  3422  005A  01B1               	clrf	map@x+3
  3423  005B  01B2               	clrf	map@in_min
  3424  005C  01B3               	clrf	map@in_min+1
  3425  005D  01B4               	clrf	map@in_min+2
  3426  005E  01B5               	clrf	map@in_min+3
  3427  005F  00B6               	movwf	map@in_max
  3428  0060  300A               	movlw	10
  3429  0061  01B7               	clrf	map@in_max+1
  3430  0062  01B8               	clrf	map@in_max+2
  3431  0063  01B9               	clrf	map@in_max+3
  3432  0064  00BA               	movwf	map@out_min
  3433  0065  3001               	movlw	1
  3434  0066  01BB               	clrf	map@out_min+1
  3435  0067  01BC               	clrf	map@out_min+2
  3436  0068  01BD               	clrf	map@out_min+3
  3437  0069  01C1               	clrf	map@out_max+3
  3438  006A  01C0               	clrf	map@out_max+2
  3439  006B  00BF               	movwf	map@out_max+1
  3440  006C  30F4               	movlw	244
  3441  006D  00BE               	movwf	map@out_max
  3442  006E  2300               	fcall	_map
  3443  006F  082F               	movf	?_map+1,w
  3444  0070  00CD               	movwf	_pause+1
  3445  0071  082E               	movf	?_map,w
  3446  0072  00CC               	movwf	_pause
  3447                           
  3448                           ;main.c: 476:             if (result != result_old) {
  3449  0073  084B               	movf	_result_old+1,w
  3450  0074  0651               	xorwf	_result+1,w
  3451  0075  1D03               	skipz
  3452  0076  2879               	goto	u74_25
  3453  0077  084A               	movf	_result_old,w
  3454  0078  0650               	xorwf	_result,w
  3455  0079                     u74_25:	
  3456  0079  1903               	skipnz
  3457  007A  2881               	goto	i1l255
  3458                           
  3459                           ;main.c: 477:                 break_del = 1;
  3460  007B  147C               	bsf	_break_del/(0+8),_break_del& (0+7)
  3461                           
  3462                           ;main.c: 478:                 result_old = result;
  3463  007C  0851               	movf	_result+1,w
  3464  007D  00CB               	movwf	_result_old+1
  3465  007E  0850               	movf	_result,w
  3466  007F  00CA               	movwf	_result_old
  3467                           
  3468                           ;main.c: 479:             } else break_del = 0;
  3469  0080  2882               	goto	i1l1975
  3470  0081                     i1l255:	
  3471  0081  107C               	bcf	_break_del/(0+8),_break_del& (0+7)
  3472  0082                     i1l1975:	
  3473                           
  3474                           ;main.c: 480:             if (tim1_cnt > 5) {
  3475  0082  3006               	movlw	6
  3476  0083  0252               	subwf	_tim1_cnt,w
  3477  0084  1803               	btfsc	3,0
  3478                           
  3479                           ;main.c: 481:                 tim1_cnt = 0;
  3480  0085  01D2               	clrf	_tim1_cnt
  3481  0086                     i1l1979:	
  3482                           
  3483                           ;main.c: 485:         tim1_cnt++;
  3484  0086  0AD2               	incf	_tim1_cnt,f
  3485                           
  3486                           ;main.c: 486:         TMR1IF = 0;
  3487  0087  1011               	bcf	17,0	;volatile
  3488  0088                     i1l1983:	
  3489                           
  3490                           ;main.c: 489:     if (ADIF) {
  3491  0088  1B11               	btfsc	17,6	;volatile
  3492                           
  3493                           ;main.c: 491:         ADIF = 0;
  3494  0089  1311               	bcf	17,6	;volatile
  3495  008A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3496  008B  0009               	retfie
  3497  008C                     __end_of_ISR:	
  3498                           
  3499                           	psect	text24
  3500  0300                     __ptext24:	
  3501 ;; *************** function _map *****************
  3502 ;; Defined at:
  3503 ;;		line 245 in file "main.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  x               4   14[BANK0 ] long 
  3506 ;;  in_min          4   18[BANK0 ] long 
  3507 ;;  in_max          4   22[BANK0 ] long 
  3508 ;;  out_min         4   26[BANK0 ] long 
  3509 ;;  out_max         4   30[BANK0 ] long 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  4   14[BANK0 ] long 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0, pclath, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 1F/0
  3518 ;;		On exit  : 1F/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3521 ;;      Params:         0      20       0       0
  3522 ;;      Locals:         0       0       0       0
  3523 ;;      Temps:          0       4       0       0
  3524 ;;      Totals:         0      24       0       0
  3525 ;;Total ram usage:       24 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    1
  3528 ;; This function calls:
  3529 ;;		___aldiv
  3530 ;;		___lmul
  3531 ;; This function is called by:
  3532 ;;		_ISR
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           
  3537                           ;psect for function _map
  3538  0300                     _map:	
  3539                           
  3540                           ;main.c: 246:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  3541                           
  3542                           ;incstack = 0
  3543                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  3544  0300  0839               	movf	map@in_max+3,w
  3545  0301  00A3               	movwf	___aldiv@divisor+3
  3546  0302  0838               	movf	map@in_max+2,w
  3547  0303  00A2               	movwf	___aldiv@divisor+2
  3548  0304  0837               	movf	map@in_max+1,w
  3549  0305  00A1               	movwf	___aldiv@divisor+1
  3550  0306  0836               	movf	map@in_max,w
  3551  0307  00A0               	movwf	___aldiv@divisor
  3552  0308  0832               	movf	map@in_min,w
  3553  0309  02A0               	subwf	___aldiv@divisor,f
  3554  030A  0833               	movf	map@in_min+1,w
  3555  030B  3BA1               	subwfb	___aldiv@divisor+1,f
  3556  030C  0834               	movf	map@in_min+2,w
  3557  030D  3BA2               	subwfb	___aldiv@divisor+2,f
  3558  030E  0835               	movf	map@in_min+3,w
  3559  030F  3BA3               	subwfb	___aldiv@divisor+3,f
  3560  0310  0841               	movf	map@out_max+3,w
  3561  0311  00F7               	movwf	___lmul@multiplicand+3
  3562  0312  0840               	movf	map@out_max+2,w
  3563  0313  00F6               	movwf	___lmul@multiplicand+2
  3564  0314  083F               	movf	map@out_max+1,w
  3565  0315  00F5               	movwf	___lmul@multiplicand+1
  3566  0316  083E               	movf	map@out_max,w
  3567  0317  00F4               	movwf	___lmul@multiplicand
  3568  0318  083A               	movf	map@out_min,w
  3569  0319  02F4               	subwf	___lmul@multiplicand,f
  3570  031A  083B               	movf	map@out_min+1,w
  3571  031B  3BF5               	subwfb	___lmul@multiplicand+1,f
  3572  031C  083C               	movf	map@out_min+2,w
  3573  031D  3BF6               	subwfb	___lmul@multiplicand+2,f
  3574  031E  083D               	movf	map@out_min+3,w
  3575  031F  3BF7               	subwfb	___lmul@multiplicand+3,f
  3576  0320  0831               	movf	map@x+3,w
  3577  0321  00F3               	movwf	___lmul@multiplier+3
  3578  0322  0830               	movf	map@x+2,w
  3579  0323  00F2               	movwf	___lmul@multiplier+2
  3580  0324  082F               	movf	map@x+1,w
  3581  0325  00F1               	movwf	___lmul@multiplier+1
  3582  0326  082E               	movf	map@x,w
  3583  0327  00F0               	movwf	___lmul@multiplier
  3584  0328  0832               	movf	map@in_min,w
  3585  0329  02F0               	subwf	___lmul@multiplier,f
  3586  032A  0833               	movf	map@in_min+1,w
  3587  032B  3BF1               	subwfb	___lmul@multiplier+1,f
  3588  032C  0834               	movf	map@in_min+2,w
  3589  032D  3BF2               	subwfb	___lmul@multiplier+2,f
  3590  032E  0835               	movf	map@in_min+3,w
  3591  032F  3BF3               	subwfb	___lmul@multiplier+3,f
  3592  0330  241B               	fcall	___lmul
  3593  0331  0873               	movf	?___lmul+3,w
  3594  0332  00A7               	movwf	___aldiv@dividend+3
  3595  0333  0872               	movf	?___lmul+2,w
  3596  0334  00A6               	movwf	___aldiv@dividend+2
  3597  0335  0871               	movf	?___lmul+1,w
  3598  0336  00A5               	movwf	___aldiv@dividend+1
  3599  0337  0870               	movf	?___lmul,w
  3600  0338  00A4               	movwf	___aldiv@dividend
  3601  0339  222F               	fcall	___aldiv
  3602  033A  0820               	movf	?___aldiv,w
  3603  033B  073A               	addwf	map@out_min,w
  3604  033C  00C2               	movwf	??_map
  3605  033D  0821               	movf	?___aldiv+1,w
  3606  033E  3D3B               	addwfc	map@out_min+1,w
  3607  033F  00C3               	movwf	??_map+1
  3608  0340  0822               	movf	?___aldiv+2,w
  3609  0341  3D3C               	addwfc	map@out_min+2,w
  3610  0342  00C4               	movwf	??_map+2
  3611  0343  0823               	movf	?___aldiv+3,w
  3612  0344  3D3D               	addwfc	map@out_min+3,w
  3613  0345  00C5               	movwf	??_map+3
  3614  0346  00B1               	movwf	?_map+3
  3615  0347  0844               	movf	??_map+2,w
  3616  0348  00B0               	movwf	?_map+2
  3617  0349  0843               	movf	??_map+1,w
  3618  034A  00AF               	movwf	?_map+1
  3619  034B  0842               	movf	??_map,w
  3620  034C  00AE               	movwf	?_map
  3621  034D  0008               	return
  3622  034E                     __end_of_map:	
  3623                           
  3624                           	psect	text25
  3625  041B                     __ptext25:	
  3626 ;; *************** function ___lmul *****************
  3627 ;; Defined at:
  3628 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  multiplier      4    0[COMMON] unsigned long 
  3631 ;;  multiplicand    4    4[COMMON] unsigned long 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  product         4    8[COMMON] unsigned long 
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  4    0[COMMON] unsigned long 
  3636 ;; Registers used:
  3637 ;;		wreg, status,2, status,0
  3638 ;; Tracked objects:
  3639 ;;		On entry : 1F/0
  3640 ;;		On exit  : 1F/0
  3641 ;;		Unchanged: 1F/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3643 ;;      Params:         8       0       0       0
  3644 ;;      Locals:         4       0       0       0
  3645 ;;      Temps:          0       0       0       0
  3646 ;;      Totals:        12       0       0       0
  3647 ;;Total ram usage:       12 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_map
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           
  3657                           ;psect for function ___lmul
  3658  041B                     ___lmul:	
  3659                           
  3660                           ;incstack = 0
  3661                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3662  041B  01F8               	clrf	___lmul@product
  3663  041C  01F9               	clrf	___lmul@product+1
  3664  041D  01FA               	clrf	___lmul@product+2
  3665  041E  01FB               	clrf	___lmul@product+3
  3666  041F                     i1l338:	
  3667  041F  1C70               	btfss	___lmul@multiplier,0
  3668  0420  2C29               	goto	i1l1473
  3669  0421  0874               	movf	___lmul@multiplicand,w
  3670  0422  07F8               	addwf	___lmul@product,f
  3671  0423  0875               	movf	___lmul@multiplicand+1,w
  3672  0424  3DF9               	addwfc	___lmul@product+1,f
  3673  0425  0876               	movf	___lmul@multiplicand+2,w
  3674  0426  3DFA               	addwfc	___lmul@product+2,f
  3675  0427  0877               	movf	___lmul@multiplicand+3,w
  3676  0428  3DFB               	addwfc	___lmul@product+3,f
  3677  0429                     i1l1473:	
  3678  0429  35F4               	lslf	___lmul@multiplicand,f
  3679  042A  0DF5               	rlf	___lmul@multiplicand+1,f
  3680  042B  0DF6               	rlf	___lmul@multiplicand+2,f
  3681  042C  0DF7               	rlf	___lmul@multiplicand+3,f
  3682  042D  36F3               	lsrf	___lmul@multiplier+3,f
  3683  042E  0CF2               	rrf	___lmul@multiplier+2,f
  3684  042F  0CF1               	rrf	___lmul@multiplier+1,f
  3685  0430  0CF0               	rrf	___lmul@multiplier,f
  3686  0431  0873               	movf	___lmul@multiplier+3,w
  3687  0432  0472               	iorwf	___lmul@multiplier+2,w
  3688  0433  0471               	iorwf	___lmul@multiplier+1,w
  3689  0434  0470               	iorwf	___lmul@multiplier,w
  3690  0435  1D03               	skipz
  3691  0436  2C1F               	goto	i1l338
  3692  0437  087B               	movf	___lmul@product+3,w
  3693  0438  00F3               	movwf	?___lmul+3
  3694  0439  087A               	movf	___lmul@product+2,w
  3695  043A  00F2               	movwf	?___lmul+2
  3696  043B  0879               	movf	___lmul@product+1,w
  3697  043C  00F1               	movwf	?___lmul+1
  3698  043D  0878               	movf	___lmul@product,w
  3699  043E  00F0               	movwf	?___lmul
  3700  043F  0008               	return
  3701  0440                     __end_of___lmul:	
  3702                           
  3703                           	psect	text26
  3704  022F                     __ptext26:	
  3705 ;; *************** function ___aldiv *****************
  3706 ;; Defined at:
  3707 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  divisor         4    0[BANK0 ] long 
  3710 ;;  dividend        4    4[BANK0 ] long 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  quotient        4   10[BANK0 ] long 
  3713 ;;  sign            1    9[BANK0 ] unsigned char 
  3714 ;;  counter         1    8[BANK0 ] unsigned char 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  4    0[BANK0 ] long 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0
  3719 ;; Tracked objects:
  3720 ;;		On entry : 1F/0
  3721 ;;		On exit  : 1F/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3724 ;;      Params:         0       8       0       0
  3725 ;;      Locals:         0       6       0       0
  3726 ;;      Temps:          0       0       0       0
  3727 ;;      Totals:         0      14       0       0
  3728 ;;Total ram usage:       14 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; This function calls:
  3731 ;;		Nothing
  3732 ;; This function is called by:
  3733 ;;		_map
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           
  3738                           ;psect for function ___aldiv
  3739  022F                     ___aldiv:	
  3740                           
  3741                           ;incstack = 0
  3742                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3743  022F  01A9               	clrf	___aldiv@sign
  3744  0230  1FA3               	btfss	___aldiv@divisor+3,7
  3745  0231  2A3F               	goto	i1l397
  3746  0232  09A0               	comf	___aldiv@divisor,f
  3747  0233  09A1               	comf	___aldiv@divisor+1,f
  3748  0234  09A2               	comf	___aldiv@divisor+2,f
  3749  0235  09A3               	comf	___aldiv@divisor+3,f
  3750  0236  0AA0               	incf	___aldiv@divisor,f
  3751  0237  1903               	skipnz
  3752  0238  0AA1               	incf	___aldiv@divisor+1,f
  3753  0239  1903               	skipnz
  3754  023A  0AA2               	incf	___aldiv@divisor+2,f
  3755  023B  1903               	skipnz
  3756  023C  0AA3               	incf	___aldiv@divisor+3,f
  3757  023D  01A9               	clrf	___aldiv@sign
  3758  023E  0AA9               	incf	___aldiv@sign,f
  3759  023F                     i1l397:	
  3760  023F  1FA7               	btfss	___aldiv@dividend+3,7
  3761  0240  2A4E               	goto	i1l1491
  3762  0241  09A4               	comf	___aldiv@dividend,f
  3763  0242  09A5               	comf	___aldiv@dividend+1,f
  3764  0243  09A6               	comf	___aldiv@dividend+2,f
  3765  0244  09A7               	comf	___aldiv@dividend+3,f
  3766  0245  0AA4               	incf	___aldiv@dividend,f
  3767  0246  1903               	skipnz
  3768  0247  0AA5               	incf	___aldiv@dividend+1,f
  3769  0248  1903               	skipnz
  3770  0249  0AA6               	incf	___aldiv@dividend+2,f
  3771  024A  1903               	skipnz
  3772  024B  0AA7               	incf	___aldiv@dividend+3,f
  3773  024C  3001               	movlw	1
  3774  024D  06A9               	xorwf	___aldiv@sign,f
  3775  024E                     i1l1491:	
  3776  024E  01AA               	clrf	___aldiv@quotient
  3777  024F  01AB               	clrf	___aldiv@quotient+1
  3778  0250  01AC               	clrf	___aldiv@quotient+2
  3779  0251  01AD               	clrf	___aldiv@quotient+3
  3780  0252  0823               	movf	___aldiv@divisor+3,w
  3781  0253  0422               	iorwf	___aldiv@divisor+2,w
  3782  0254  0421               	iorwf	___aldiv@divisor+1,w
  3783  0255  0420               	iorwf	___aldiv@divisor,w
  3784  0256  1903               	skipnz
  3785  0257  2A84               	goto	i1l1513
  3786  0258  01A8               	clrf	___aldiv@counter
  3787  0259                     L1:	
  3788  0259  0AA8               	incf	___aldiv@counter,f
  3789  025A  1BA3               	btfsc	___aldiv@divisor+3,7
  3790  025B  2A61               	goto	i1l1501
  3791  025C  35A0               	lslf	___aldiv@divisor,f
  3792  025D  0DA1               	rlf	___aldiv@divisor+1,f
  3793  025E  0DA2               	rlf	___aldiv@divisor+2,f
  3794  025F  0DA3               	rlf	___aldiv@divisor+3,f
  3795  0260  2A59               	goto	L1
  3796  0261                     i1l1501:	
  3797  0261  35AA               	lslf	___aldiv@quotient,f
  3798  0262  0DAB               	rlf	___aldiv@quotient+1,f
  3799  0263  0DAC               	rlf	___aldiv@quotient+2,f
  3800  0264  0DAD               	rlf	___aldiv@quotient+3,f
  3801  0265  0823               	movf	___aldiv@divisor+3,w
  3802  0266  0227               	subwf	___aldiv@dividend+3,w
  3803  0267  1D03               	skipz
  3804  0268  2A73               	goto	u49_25
  3805  0269  0822               	movf	___aldiv@divisor+2,w
  3806  026A  0226               	subwf	___aldiv@dividend+2,w
  3807  026B  1D03               	skipz
  3808  026C  2A73               	goto	u49_25
  3809  026D  0821               	movf	___aldiv@divisor+1,w
  3810  026E  0225               	subwf	___aldiv@dividend+1,w
  3811  026F  1D03               	skipz
  3812  0270  2A73               	goto	u49_25
  3813  0271  0820               	movf	___aldiv@divisor,w
  3814  0272  0224               	subwf	___aldiv@dividend,w
  3815  0273                     u49_25:	
  3816  0273  1C03               	skipc
  3817  0274  2A7E               	goto	i1l1509
  3818  0275  0820               	movf	___aldiv@divisor,w
  3819  0276  02A4               	subwf	___aldiv@dividend,f
  3820  0277  0821               	movf	___aldiv@divisor+1,w
  3821  0278  3BA5               	subwfb	___aldiv@dividend+1,f
  3822  0279  0822               	movf	___aldiv@divisor+2,w
  3823  027A  3BA6               	subwfb	___aldiv@dividend+2,f
  3824  027B  0823               	movf	___aldiv@divisor+3,w
  3825  027C  3BA7               	subwfb	___aldiv@dividend+3,f
  3826  027D  142A               	bsf	___aldiv@quotient,0
  3827  027E                     i1l1509:	
  3828  027E  36A3               	lsrf	___aldiv@divisor+3,f
  3829  027F  0CA2               	rrf	___aldiv@divisor+2,f
  3830  0280  0CA1               	rrf	___aldiv@divisor+1,f
  3831  0281  0CA0               	rrf	___aldiv@divisor,f
  3832  0282  0BA8               	decfsz	___aldiv@counter,f
  3833  0283  2A61               	goto	i1l1501
  3834  0284                     i1l1513:	
  3835  0284  0829               	movf	___aldiv@sign,w
  3836  0285  1903               	btfsc	3,2
  3837  0286  2A92               	goto	i1l1517
  3838  0287  09AA               	comf	___aldiv@quotient,f
  3839  0288  09AB               	comf	___aldiv@quotient+1,f
  3840  0289  09AC               	comf	___aldiv@quotient+2,f
  3841  028A  09AD               	comf	___aldiv@quotient+3,f
  3842  028B  0AAA               	incf	___aldiv@quotient,f
  3843  028C  1903               	skipnz
  3844  028D  0AAB               	incf	___aldiv@quotient+1,f
  3845  028E  1903               	skipnz
  3846  028F  0AAC               	incf	___aldiv@quotient+2,f
  3847  0290  1903               	skipnz
  3848  0291  0AAD               	incf	___aldiv@quotient+3,f
  3849  0292                     i1l1517:	
  3850  0292  082D               	movf	___aldiv@quotient+3,w
  3851  0293  00A3               	movwf	?___aldiv+3
  3852  0294  082C               	movf	___aldiv@quotient+2,w
  3853  0295  00A2               	movwf	?___aldiv+2
  3854  0296  082B               	movf	___aldiv@quotient+1,w
  3855  0297  00A1               	movwf	?___aldiv+1
  3856  0298  082A               	movf	___aldiv@quotient,w
  3857  0299  00A0               	movwf	?___aldiv
  3858  029A  0008               	return
  3859  029B                     __end_of___aldiv:	
  3860                           
  3861                           	psect	text27
  3862  053F                     __ptext27:	
  3863 ;; *************** function _adr_read *****************
  3864 ;; Defined at:
  3865 ;;		line 235 in file "main.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;		None
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  adc_result      2    4[COMMON] unsigned short 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  2    0[COMMON] unsigned short 
  3872 ;; Registers used:
  3873 ;;		wreg, status,2
  3874 ;; Tracked objects:
  3875 ;;		On entry : 1F/0
  3876 ;;		On exit  : 1F/1
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3879 ;;      Params:         2       0       0       0
  3880 ;;      Locals:         2       0       0       0
  3881 ;;      Temps:          2       0       0       0
  3882 ;;      Totals:         6       0       0       0
  3883 ;;Total ram usage:        6 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_ISR
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           
  3893                           ;psect for function _adr_read
  3894  053F                     _adr_read:	
  3895                           
  3896                           ;main.c: 237:     GO = 1;
  3897                           
  3898                           ;incstack = 0
  3899                           ; Regs used in _adr_read: [wreg+status,2]
  3900  053F  0021               	movlb	1	; select bank1
  3901  0540  149D               	bsf	29,1	;volatile
  3902  0541                     i1l171:	
  3903                           ;main.c: 238:     while (GO);
  3904                           
  3905  0541  189D               	btfsc	29,1	;volatile
  3906  0542  2D41               	goto	i1l171
  3907                           
  3908                           ;main.c: 239:     adc_result = ADRESH << 8;
  3909  0543  081C               	movf	28,w	;volatile
  3910  0544  00F5               	movwf	adr_read@adc_result+1
  3911  0545  01F4               	clrf	adr_read@adc_result
  3912                           
  3913                           ;main.c: 240:     adc_result = adc_result | ADRESL;
  3914  0546  0874               	movf	adr_read@adc_result,w
  3915  0547  041B               	iorwf	27,w	;volatile
  3916  0548  00F2               	movwf	??_adr_read
  3917  0549  0875               	movf	adr_read@adc_result+1,w
  3918  054A  00F3               	movwf	??_adr_read+1
  3919  054B  0872               	movf	??_adr_read,w
  3920  054C  00F4               	movwf	adr_read@adc_result
  3921  054D  0873               	movf	??_adr_read+1,w
  3922  054E  00F5               	movwf	adr_read@adc_result+1
  3923                           
  3924                           ;main.c: 241:     return adc_result;
  3925  054F  00F1               	movwf	?_adr_read+1
  3926  0550  0874               	movf	adr_read@adc_result,w
  3927  0551  00F0               	movwf	?_adr_read
  3928  0552  0008               	return
  3929  0553                     __end_of_adr_read:	
  3930                           
  3931                           	psect	text28
  3932  0440                     __ptext28:	
  3933 ;; *************** function ___lwdiv *****************
  3934 ;; Defined at:
  3935 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lwdiv.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  divisor         2    0[COMMON] unsigned int 
  3938 ;;  dividend        2    2[COMMON] unsigned int 
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;  quotient        2    4[COMMON] unsigned int 
  3941 ;;  counter         1    6[COMMON] unsigned char 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  2    0[COMMON] unsigned int 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0
  3946 ;; Tracked objects:
  3947 ;;		On entry : 1F/0
  3948 ;;		On exit  : 1F/0
  3949 ;;		Unchanged: 1F/0
  3950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3951 ;;      Params:         4       0       0       0
  3952 ;;      Locals:         3       0       0       0
  3953 ;;      Temps:          0       0       0       0
  3954 ;;      Totals:         7       0       0       0
  3955 ;;Total ram usage:        7 bytes
  3956 ;; Hardware stack levels used:    1
  3957 ;; This function calls:
  3958 ;;		Nothing
  3959 ;; This function is called by:
  3960 ;;		_ISR
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           
  3965                           ;psect for function ___lwdiv
  3966  0440                     ___lwdiv:	
  3967                           
  3968                           ;incstack = 0
  3969                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3970  0440  01F4               	clrf	___lwdiv@quotient
  3971  0441  01F5               	clrf	___lwdiv@quotient+1
  3972  0442  0870               	movf	___lwdiv@divisor,w
  3973  0443  0471               	iorwf	___lwdiv@divisor+1,w
  3974  0444  1903               	btfsc	3,2
  3975  0445  2C60               	goto	i1l1865
  3976  0446  01F6               	clrf	___lwdiv@counter
  3977  0447                     L2:	
  3978  0447  0AF6               	incf	___lwdiv@counter,f
  3979  0448  1BF1               	btfsc	___lwdiv@divisor+1,7
  3980  0449  2C4D               	goto	i1l1853
  3981  044A  35F0               	lslf	___lwdiv@divisor,f
  3982  044B  0DF1               	rlf	___lwdiv@divisor+1,f
  3983  044C  2C47               	goto	L2
  3984  044D                     i1l1853:	
  3985  044D  35F4               	lslf	___lwdiv@quotient,f
  3986  044E  0DF5               	rlf	___lwdiv@quotient+1,f
  3987  044F  0871               	movf	___lwdiv@divisor+1,w
  3988  0450  0273               	subwf	___lwdiv@dividend+1,w
  3989  0451  1D03               	skipz
  3990  0452  2C55               	goto	u64_25
  3991  0453  0870               	movf	___lwdiv@divisor,w
  3992  0454  0272               	subwf	___lwdiv@dividend,w
  3993  0455                     u64_25:	
  3994  0455  1C03               	skipc
  3995  0456  2C5C               	goto	i1l1861
  3996  0457  0870               	movf	___lwdiv@divisor,w
  3997  0458  02F2               	subwf	___lwdiv@dividend,f
  3998  0459  0871               	movf	___lwdiv@divisor+1,w
  3999  045A  3BF3               	subwfb	___lwdiv@dividend+1,f
  4000  045B  1474               	bsf	___lwdiv@quotient,0
  4001  045C                     i1l1861:	
  4002  045C  36F1               	lsrf	___lwdiv@divisor+1,f
  4003  045D  0CF0               	rrf	___lwdiv@divisor,f
  4004  045E  0BF6               	decfsz	___lwdiv@counter,f
  4005  045F  2C4D               	goto	i1l1853
  4006  0460                     i1l1865:	
  4007  0460  0875               	movf	___lwdiv@quotient+1,w
  4008  0461  00F1               	movwf	?___lwdiv+1
  4009  0462  0874               	movf	___lwdiv@quotient,w
  4010  0463  00F0               	movwf	?___lwdiv
  4011  0464  0008               	return
  4012  0465                     __end_of___lwdiv:	
  4013  007E                     btemp	set	126	;btemp
  4014  007E                     int$flags	set	126
  4015  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         13
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     38      52
    BANK1            80     15      15
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _map->___lmul
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_map
    _map->___aldiv

Critical Paths under _main in BANK1

    _main->_begogon2
    _main->_begogon3
    _miganie->_BLUE_LED
    _miganie->_GREEN_LED
    _miganie->_RED_LED
    _begogonGR->_BLUE_LED
    _begogonGR->_GREEN_LED
    _begogonGR->_RED_LED
    _begogonGB->_BLUE_LED
    _begogonGB->_GREEN_LED
    _begogonGB->_RED_LED
    _begogonBR->_BLUE_LED
    _begogonBR->_GREEN_LED
    _begogonBR->_RED_LED
    _begogon3->_BLUE_LED
    _begogon3->_GREEN_LED
    _begogon3->_RED_LED
    _begogon2->_BLUE_LED
    _begogon2->_GREEN_LED
    _begogon2->_RED_LED
    _begogon1->_BLUE_LED
    _begogon1->_GREEN_LED
    _begogon1->_RED_LED
    _RGB_ON->_BLUE_LED
    _RGB_ON->_GREEN_LED
    _RGB_ON->_RED_LED
    _RED_LED->___wmul
    _GREEN_LED->___wmul
    _BLUE_LED->___wmul

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   90375
                                             13 BANK1      2     2      0
                           _BLUE_LED
                          _GREEN_LED
                            _RED_LED
                             _RGB_ON
                          _adc_setup
                           _begogon1
                           _begogon2
                           _begogon3
                          _begogonBR
                          _begogonGB
                          _begogonGR
                            _miganie
                             _millis
                          _osc_setup
                         _port_setup
                          _pwm1_init
                          _pwm2_init
                          _pwm3_init
                          _tmr0_init
                          _tmr1_init
 ---------------------------------------------------------------------------------
 (1) _tmr1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tmr0_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm3_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _port_setup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _millis                                               2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _miganie                                              2     0      2   10320
                                              9 BANK1      2     0      2
                           _BLUE_LED
                          _GREEN_LED
                            _RED_LED
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _begogonGR                                            2     0      2   10320
                                              9 BANK1      2     0      2
                           _BLUE_LED
                          _GREEN_LED
                            _RED_LED
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _begogonGB                                            2     0      2   10320
                                              9 BANK1      2     0      2
                           _BLUE_LED
                          _GREEN_LED
                            _RED_LED
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _begogonBR                                            2     0      2   10320
                                              9 BANK1      2     0      2
                           _BLUE_LED
                          _GREEN_LED
                            _RED_LED
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _begogon3                                             4     2      2   10762
                                              9 BANK1      4     2      2
                           _BLUE_LED
                          _GREEN_LED
                            _RED_LED
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _begogon2                                             4     2      2   11227
                                              9 BANK1      4     2      2
                           _BLUE_LED
                          _GREEN_LED
                            _RED_LED
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _begogon1                                             2     0      2   10351
                                              9 BANK1      2     0      2
                           _BLUE_LED
                          _GREEN_LED
                            _RED_LED
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             3     1      2    1837
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _adc_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB_ON                                               1     1      0    8424
                                              9 BANK1      1     1      0
                           _BLUE_LED
                          _GREEN_LED
                            _RED_LED
 ---------------------------------------------------------------------------------
 (2) _RED_LED                                              3     1      2    2777
                                              6 BANK1      3     1      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _GREEN_LED                                            3     1      2    2777
                                              6 BANK1      3     1      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _BLUE_LED                                             3     1      2    2777
                                              6 BANK1      3     1      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     676
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0    2037
                            ___lwdiv
                           _adr_read
                                _map
 ---------------------------------------------------------------------------------
 (5) _map                                                 24     4     20    1676
                                             14 BANK0     24     4     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     288
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     474
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _adr_read                                             6     4      2      47
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BLUE_LED
     ___wmul
   _GREEN_LED
     ___wmul
   _RED_LED
     ___wmul
   _RGB_ON
     _BLUE_LED
       ___wmul
     _GREEN_LED
       ___wmul
     _RED_LED
       ___wmul
   _adc_setup
   _begogon1
     _BLUE_LED
       ___wmul
     _GREEN_LED
       ___wmul
     _RED_LED
       ___wmul
     _delay_ms
   _begogon2
     _BLUE_LED
       ___wmul
     _GREEN_LED
       ___wmul
     _RED_LED
       ___wmul
     _delay_ms
   _begogon3
     _BLUE_LED
       ___wmul
     _GREEN_LED
       ___wmul
     _RED_LED
       ___wmul
     _delay_ms
   _begogonBR
     _BLUE_LED
       ___wmul
     _GREEN_LED
       ___wmul
     _RED_LED
       ___wmul
     _delay_ms
   _begogonGB
     _BLUE_LED
       ___wmul
     _GREEN_LED
       ___wmul
     _RED_LED
       ___wmul
     _delay_ms
   _begogonGR
     _BLUE_LED
       ___wmul
     _GREEN_LED
       ___wmul
     _RED_LED
       ___wmul
     _delay_ms
   _miganie
     _BLUE_LED
       ___wmul
     _GREEN_LED
       ___wmul
     _RED_LED
       ___wmul
     _delay_ms
   _millis
   _osc_setup
   _port_setup
   _pwm1_init
   _pwm2_init
   _pwm3_init
   _tmr0_init
   _tmr1_init

 _ISR (ROOT)
   ___lwdiv
   _adr_read
   _map
     ___aldiv
       ___lmul (ARG)
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      50       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     26      34       6       65.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      F       F       8       18.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      50      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec 14 13:35:35 2021

                      pc 0002              __CFG_CP$OFF 0000                       _GO 04E9  
    ___wmul@multiplicand 00A2              __CFG_LVP$ON 0000                      l226 00B8  
                    l243 0162                      _GIE 005F                      _ISR 0004  
                    _PSA 04AB                      u947 04C6                      u957 047C  
                    u967 0499                      u977 04B6                      _map 0300  
           __CFG_BORV$LO 0000                      wreg 0009                     S2541 0553  
                   ?_ISR 0070                     l2053 0532                     l2063 04BC  
                   l2303 01FD                     l2049 052C                     l2067 04D1  
                   l2315 0218                     l2251 0193                     l2069 04BC  
                   l2421 00A2                     l2405 0099                     l2087 049F  
                   l2079 0482                     l2263 01AE                     l2337 02AA  
                   l2441 00D9                     l2451 0126                     l2443 00E3  
                   l2435 00C1                     l2419 0165                     l2277 01C8  
                   l2381 02E6                     l2461 0158                     l2453 0130  
                   l2445 00F6                     l2437 00C5                     l2359 02C8  
                   l2455 013A                     l2447 0109                     l2439 00CF  
                   l2289 01E3                     l2457 0144                     l2449 011C  
                   l2465 0177                     l2539 0181                     l2459 014E  
                   ?_map 002E                     _ADIF 008E                     _T0IE 005D  
                   _T0IF 005A          __end_of_RED_LED 0482                     _PEIE 005E  
                   _TMR0 0015                     _WPUA 020C            GREEN_LED@duty 00A6  
           __CFG_WRT$OFF 0000       __size_of_GREEN_LED 001D                     _main 0099  
                   fsr0h 0005                     indf0 0000                     fsr0l 0004  
                   map@x 002E                     btemp 007E                     start 008C  
       __end_of_BLUE_LED 04BC                    ??_ISR 007C                    ??_map 0042  
        __end_of___aldiv 029B                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _IOCIE 005B                    _IOCIF 0058          __end_of___lwdiv 0465  
                  i1l171 0541                    i1l252 0015                    i1l255 0081  
                  i1l338 041F                    i1l397 023F                    _TMR1H 0017  
                  _TMR1L 0016                    u64_25 0455                    u49_25 0273  
                  u74_25 0079      ___lmul@multiplicand 0074           _PWM1CLKCONbits 0D9E  
        __end_of_miganie 041B                    _pause 004C                    _time1 0046  
         __pbitbssCOMMON 03E0           __CFG_BOREN$OFF 0000           _PWM2CLKCONbits 0DAE  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
         _PWM3CLKCONbits 0DBE          __initialization 008D             __end_of_main 018F  
      __end_of_GREEN_LED 049F                   ??_main 00AD           __CFG_PLLEN$OFF 0000  
              ??_RED_LED 00A8                   _ADCON0 009D                   _ADCON1 009E  
                 _ADRESH 009C                   _ADRESL 009B                   i1l1501 0261  
                 i1l1513 0284                   i1l1517 0292                   i1l1509 027E  
                 i1l1473 0429                   i1l1491 024E                   i1l1861 045C  
                 i1l1853 044D                   i1l1951 000F                   i1l1865 0460  
                 i1l1975 0082                   i1l1983 0088                   i1l1979 0086  
                 _RGB_ON 0562                   _PWM1DC 0D93                   _PWM2DC 0DA3  
                 _PWM3DC 0DB3                   _TMR0CS 04AD                   _TMR1IE 0488  
                 _TMR1IF 0088                   _PWM1PH 0D91                   _PWM2PH 0DA1  
                 _PWM3PH 0DB1                   _PWM1PR 0D95                   _TMR1ON 00C0  
                 _PWM2PR 0DA5                   _PWM3PR 0DB5         __end_of_adr_read 0553  
       __end_of_begogon1 0384         __end_of_begogon2 022F         __end_of_begogon3 0300  
       __end_of_delay_ms 04D4           __CFG_PWRTE$OFF 0000     delay_ms@milliseconds 00A0  
     begogon3@count_down 00AB                   ___lmul 041B                ??___aldiv 007C  
                 ___wmul 052A           __CFG_STVREN$ON 0000                ??___lwdiv 0074  
                 _btn_ok 03E1                   _millis 0595                   _result 0050  
              ??_miganie 00AB              RED_LED@duty 00A6                ?_BLUE_LED 00A6  
     adr_read@adc_result 0074  __end_of__initialization 0096       __size_of_adc_setup 0006  
         __pcstackCOMMON 0070             __pidataBANK0 0000       __size_of_begogonGB 0026  
     __size_of_begogonBR 0026       __size_of_begogonGR 0026           _OPTION_REGbits 0095  
             ??_BLUE_LED 00A8               __pbssBANK0 0046                  ?_RGB_ON 0070  
             __pmaintext 0099                  ?___lmul 0070                  ?___wmul 00A0  
             __pintentry 0004       __size_of_pwm1_init 0016       __size_of_pwm2_init 0015  
     __size_of_tmr0_init 000D       __size_of_pwm3_init 0015       __size_of_tmr1_init 000E  
         ___lmul@product 0078                  ?_millis 00A0       __size_of_osc_setup 0009  
                _T1CKPS0 00C4                  _T1CKPS1 00C5                ?_adr_read 0070  
              ?_begogon1 00A9                ?_begogon2 00A9                ?_begogon3 00A9  
      __end_of_adc_setup 05AA                  _RED_LED 0465               _brightness 004E  
              ?_delay_ms 00A0                  _TMR1CS0 00C6                  _TMR1CS1 00C7  
      __end_of_begogonGB 03D0        __end_of_begogonBR 03F6        __end_of_begogonGR 03AA  
         begogon2@count1 00AB          __size_of_RGB_ON 000F                  ___aldiv 022F  
        __size_of___lmul 0025          __size_of___wmul 0015                  ___lwdiv 0440  
        __size_of_millis 0009                  __ptext1 0571                  __ptext2 057F  
                __ptext3 0500                  __ptext4 0515                  __ptext5 04D4  
                __ptext6 04EA                  __ptext7 058C                  __ptext8 0595  
                __ptext9 03F6             __size_of_ISR 0088                  _miganie 03F6  
             ??_adr_read 0072             __size_of_map 004E               ??_begogon1 00AB  
             ??_begogon2 00AB               ??_begogon3 00AB         ___aldiv@dividend 0024  
              _GREEN_LED 0482                _IOCAFbits 0393               ??_delay_ms 00A2  
              _IOCANbits 0392                _IOCAPbits 0391                  clrloop0 059F  
   end_of_initialization 0096        __end_of_pwm1_init 04EA        __end_of_pwm2_init 052A  
      __end_of_tmr0_init 058C        __end_of_pwm3_init 0515        __end_of_tmr1_init 057F  
      __end_of_osc_setup 0595         ___aldiv@quotient 002A               _result_old 004A  
              _PORTAbits 000C         __CFG_FOSC$INTOSC 0000               ?_GREEN_LED 00A6  
              _TRISAbits 008C               _port_setup 04EA               map@out_max 003E  
             map@out_min 003A        __size_of_BLUE_LED 001D           __end_of_RGB_ON 0571  
         __end_of___lmul 0440           __end_of___wmul 053F         begogon3@count_up 00AC  
         __end_of_millis 059E      start_initialization 008D              __end_of_ISR 008C  
            __end_of_map 034E                 ??_RGB_ON 00A9            _PWM1OFCONbits 0DA0  
             miganie@del 00A9            _PWM2OFCONbits 0DB0         __CFG_LPBOREN$OFF 0000  
           begogonGB@del 00A9             begogonBR@del 00A9                 ??___lmul 0078  
          _PWM3OFCONbits 0DC0                 ??___wmul 00A4             begogonGR@del 00A9  
            __pdataBANK0 0053                 ??_millis 00A2              ??_GREEN_LED 00A8  
              ___latbits 0000                 ?_RED_LED 00A6              ?_port_setup 0070  
          __pcstackBANK0 0020            __pcstackBANK1 00A0        __size_of_adr_read 0014  
      __size_of_begogon1 0036        __size_of_begogon2 00A0        __size_of_begogon3 0065  
              _adc_setup 05A4               RGB_ON@yarc 00A9        __size_of_delay_ms 0018  
              _begogonGB 03AA                _begogonBR 03D0                _begogonGR 0384  
       ___lwdiv@dividend 0072                 ?___aldiv 0020                _break_del 03E0  
               ?___lwdiv 0070                __pswtext1 0553                 ?_miganie 00A9  
       ___lwdiv@quotient 0074               ?_adc_setup 0070                 _BLUE_LED 049F  
        ___aldiv@divisor 0020          ___aldiv@counter 0028           ___wmul@product 00A4  
             ?_begogonGB 00A9               ?_begogonBR 00A9             _millis_count 0048  
             ?_begogonGR 00A9                clear_ram0 059E                _pwm1_init 04D4  
              _tmr0_init 057F                _pwm2_init 0515                _tmr1_init 0571  
              _pwm3_init 0500                _osc_setup 058C      __size_of_port_setup 0016  
              map@in_max 0036                map@in_min 0032        ___wmul@multiplier 00A0  
       __size_of_RED_LED 001D        ___lmul@multiplier 0070             BLUE_LED@duty 00A6  
             ?_pwm1_init 0070               ?_pwm2_init 0070               ?_tmr0_init 0070  
             ?_pwm3_init 0070               ?_tmr1_init 0070               ?_osc_setup 0070  
            begogon1@del 00A9              begogon2@del 00A9              begogon3@del 00A9  
       __size_of___aldiv 006C         __size_of___lwdiv 0025               _ANSELAbits 018C  
               _adr_read 053F                 _begogon1 034E                 _begogon2 018F  
               _begogon3 029B         __size_of_miganie 0025                 _delay_ms 04BC  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076                 __ptext10 0384  
               __ptext11 03AA                 __ptext20 0482                 __ptext12 03D0  
               __ptext21 049F                 __ptext13 029B                 __ptext22 052A  
               __ptext14 018F                 __ptext15 034E                 __ptext24 0300  
               __ptext16 04BC                 __ptext25 041B                 __ptext17 05A4  
               __ptext26 022F                 __ptext18 0562                 __ptext27 053F  
               __ptext19 0465                 __ptext28 0440              ??_adc_setup 00A0  
               _btn_mode 0053            __size_of_main 00F6              ??_begogonGB 00AB  
            ??_begogonBR 00AB              ??_begogonGR 00AB                 _tim1_cnt 0052  
               int$flags 007E              _PWM1CONbits 0D9B             ??_port_setup 00A0  
            _PWM2CONbits 0DAB              _PWM3CONbits 0DBB                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000              ??_pwm1_init 00A0              ??_pwm2_init 00A0  
            ??_tmr0_init 00A0              ??_pwm3_init 00A0              ??_tmr1_init 00A0  
            ??_osc_setup 00A0               _OSCCONbits 0099       __end_of_port_setup 0500  
           ___aldiv@sign 0029  
